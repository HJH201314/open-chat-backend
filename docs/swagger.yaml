definitions:
  chat.ChatMessageListResponse:
    properties:
      list:
        items:
          $ref: '#/definitions/schema.Message'
        type: array
      model_map:
        additionalProperties:
          type: string
        description: 模型 ID -> 模型名称
        type: object
      next_page:
        type: integer
    type: object
  chat.CompletionStream.userInput:
    properties:
      bot_id:
        type: integer
      enable_context:
        type: boolean
      model_name:
        description: 模型集合名称
        type: string
      question:
        type: string
      system_prompt:
        description: 系统提示词
        type: string
    required:
    - model_name
    - question
    type: object
  chat.ShareSession.ShareRequest:
    properties:
      active:
        type: boolean
      share_info:
        $ref: '#/definitions/schema.SessionShareInfo'
    type: object
  course.MakeQuestionRequest:
    properties:
      description:
        type: string
      type:
        $ref: '#/definitions/schema.ProblemType'
    required:
    - description
    - type
    type: object
  entity.CommonResponse-any:
    properties:
      code:
        description: 代码
        type: integer
      data:
        description: 数据
      msg:
        description: 消息
        type: string
    type: object
  entity.CommonResponse-array_entity_ConfigChatModel:
    properties:
      code:
        description: 代码
        type: integer
      data:
        description: 数据
        items:
          $ref: '#/definitions/entity.ConfigChatModel'
        type: array
      msg:
        description: 消息
        type: string
    type: object
  entity.CommonResponse-array_schema_Preset:
    properties:
      code:
        description: 代码
        type: integer
      data:
        description: 数据
        items:
          $ref: '#/definitions/schema.Preset'
        type: array
      msg:
        description: 消息
        type: string
    type: object
  entity.CommonResponse-array_schema_Provider:
    properties:
      code:
        description: 代码
        type: integer
      data:
        description: 数据
        items:
          $ref: '#/definitions/schema.Provider'
        type: array
      msg:
        description: 消息
        type: string
    type: object
  entity.CommonResponse-bool:
    properties:
      code:
        description: 代码
        type: integer
      data:
        description: 数据
        type: boolean
      msg:
        description: 消息
        type: string
    type: object
  entity.CommonResponse-chat_ChatMessageListResponse:
    properties:
      code:
        description: 代码
        type: integer
      data:
        allOf:
        - $ref: '#/definitions/chat.ChatMessageListResponse'
        description: 数据
      msg:
        description: 消息
        type: string
    type: object
  entity.CommonResponse-entity_PaginatedContinuationResponse-schema_UserSession:
    properties:
      code:
        description: 代码
        type: integer
      data:
        allOf:
        - $ref: '#/definitions/entity.PaginatedContinuationResponse-schema_UserSession'
        description: 数据
      msg:
        description: 消息
        type: string
    type: object
  entity.CommonResponse-entity_PaginatedSyncListResponse-schema_UserSession:
    properties:
      code:
        description: 代码
        type: integer
      data:
        allOf:
        - $ref: '#/definitions/entity.PaginatedSyncListResponse-schema_UserSession'
        description: 数据
      msg:
        description: 消息
        type: string
    type: object
  entity.CommonResponse-entity_PaginatedTotalResponse-schema_APIKey:
    properties:
      code:
        description: 代码
        type: integer
      data:
        allOf:
        - $ref: '#/definitions/entity.PaginatedTotalResponse-schema_APIKey'
        description: 数据
      msg:
        description: 消息
        type: string
    type: object
  entity.CommonResponse-entity_PaginatedTotalResponse-schema_Bucket:
    properties:
      code:
        description: 代码
        type: integer
      data:
        allOf:
        - $ref: '#/definitions/entity.PaginatedTotalResponse-schema_Bucket'
        description: 数据
      msg:
        description: 消息
        type: string
    type: object
  entity.CommonResponse-entity_PaginatedTotalResponse-schema_Course:
    properties:
      code:
        description: 代码
        type: integer
      data:
        allOf:
        - $ref: '#/definitions/entity.PaginatedTotalResponse-schema_Course'
        description: 数据
      msg:
        description: 消息
        type: string
    type: object
  entity.CommonResponse-entity_PaginatedTotalResponse-schema_Model:
    properties:
      code:
        description: 代码
        type: integer
      data:
        allOf:
        - $ref: '#/definitions/entity.PaginatedTotalResponse-schema_Model'
        description: 数据
      msg:
        description: 消息
        type: string
    type: object
  entity.CommonResponse-entity_PaginatedTotalResponse-schema_ModelCollection:
    properties:
      code:
        description: 代码
        type: integer
      data:
        allOf:
        - $ref: '#/definitions/entity.PaginatedTotalResponse-schema_ModelCollection'
        description: 数据
      msg:
        description: 消息
        type: string
    type: object
  entity.CommonResponse-entity_PaginatedTotalResponse-schema_Permission:
    properties:
      code:
        description: 代码
        type: integer
      data:
        allOf:
        - $ref: '#/definitions/entity.PaginatedTotalResponse-schema_Permission'
        description: 数据
      msg:
        description: 消息
        type: string
    type: object
  entity.CommonResponse-entity_PaginatedTotalResponse-schema_Problem:
    properties:
      code:
        description: 代码
        type: integer
      data:
        allOf:
        - $ref: '#/definitions/entity.PaginatedTotalResponse-schema_Problem'
        description: 数据
      msg:
        description: 消息
        type: string
    type: object
  entity.CommonResponse-entity_PaginatedTotalResponse-schema_Provider:
    properties:
      code:
        description: 代码
        type: integer
      data:
        allOf:
        - $ref: '#/definitions/entity.PaginatedTotalResponse-schema_Provider'
        description: 数据
      msg:
        description: 消息
        type: string
    type: object
  entity.CommonResponse-entity_PaginatedTotalResponse-schema_Role:
    properties:
      code:
        description: 代码
        type: integer
      data:
        allOf:
        - $ref: '#/definitions/entity.PaginatedTotalResponse-schema_Role'
        description: 数据
      msg:
        description: 消息
        type: string
    type: object
  entity.CommonResponse-entity_PaginatedTotalResponse-schema_User:
    properties:
      code:
        description: 代码
        type: integer
      data:
        allOf:
        - $ref: '#/definitions/entity.PaginatedTotalResponse-schema_User'
        description: 数据
      msg:
        description: 消息
        type: string
    type: object
  entity.CommonResponse-exam_SubmitExamResponse:
    properties:
      code:
        description: 代码
        type: integer
      data:
        allOf:
        - $ref: '#/definitions/exam.SubmitExamResponse'
        description: 数据
      msg:
        description: 消息
        type: string
    type: object
  entity.CommonResponse-exam_SubmitProblemResponse:
    properties:
      code:
        description: 代码
        type: integer
      data:
        allOf:
        - $ref: '#/definitions/exam.SubmitProblemResponse'
        description: 数据
      msg:
        description: 消息
        type: string
    type: object
  entity.CommonResponse-int:
    properties:
      code:
        description: 代码
        type: integer
      data:
        description: 数据
        type: integer
      msg:
        description: 消息
        type: string
    type: object
  entity.CommonResponse-schema_APIKey:
    properties:
      code:
        description: 代码
        type: integer
      data:
        allOf:
        - $ref: '#/definitions/schema.APIKey'
        description: 数据
      msg:
        description: 消息
        type: string
    type: object
  entity.CommonResponse-schema_Bucket:
    properties:
      code:
        description: 代码
        type: integer
      data:
        allOf:
        - $ref: '#/definitions/schema.Bucket'
        description: 数据
      msg:
        description: 消息
        type: string
    type: object
  entity.CommonResponse-schema_Course:
    properties:
      code:
        description: 代码
        type: integer
      data:
        allOf:
        - $ref: '#/definitions/schema.Course'
        description: 数据
      msg:
        description: 消息
        type: string
    type: object
  entity.CommonResponse-schema_Exam:
    properties:
      code:
        description: 代码
        type: integer
      data:
        allOf:
        - $ref: '#/definitions/schema.Exam'
        description: 数据
      msg:
        description: 消息
        type: string
    type: object
  entity.CommonResponse-schema_ExamUserRecord:
    properties:
      code:
        description: 代码
        type: integer
      data:
        allOf:
        - $ref: '#/definitions/schema.ExamUserRecord'
        description: 数据
      msg:
        description: 消息
        type: string
    type: object
  entity.CommonResponse-schema_Message:
    properties:
      code:
        description: 代码
        type: integer
      data:
        allOf:
        - $ref: '#/definitions/schema.Message'
        description: 数据
      msg:
        description: 消息
        type: string
    type: object
  entity.CommonResponse-schema_Model:
    properties:
      code:
        description: 代码
        type: integer
      data:
        allOf:
        - $ref: '#/definitions/schema.Model'
        description: 数据
      msg:
        description: 消息
        type: string
    type: object
  entity.CommonResponse-schema_ModelCollection:
    properties:
      code:
        description: 代码
        type: integer
      data:
        allOf:
        - $ref: '#/definitions/schema.ModelCollection'
        description: 数据
      msg:
        description: 消息
        type: string
    type: object
  entity.CommonResponse-schema_Permission:
    properties:
      code:
        description: 代码
        type: integer
      data:
        allOf:
        - $ref: '#/definitions/schema.Permission'
        description: 数据
      msg:
        description: 消息
        type: string
    type: object
  entity.CommonResponse-schema_Problem:
    properties:
      code:
        description: 代码
        type: integer
      data:
        allOf:
        - $ref: '#/definitions/schema.Problem'
        description: 数据
      msg:
        description: 消息
        type: string
    type: object
  entity.CommonResponse-schema_Provider:
    properties:
      code:
        description: 代码
        type: integer
      data:
        allOf:
        - $ref: '#/definitions/schema.Provider'
        description: 数据
      msg:
        description: 消息
        type: string
    type: object
  entity.CommonResponse-schema_Role:
    properties:
      code:
        description: 代码
        type: integer
      data:
        allOf:
        - $ref: '#/definitions/schema.Role'
        description: 数据
      msg:
        description: 消息
        type: string
    type: object
  entity.CommonResponse-schema_Session:
    properties:
      code:
        description: 代码
        type: integer
      data:
        allOf:
        - $ref: '#/definitions/schema.Session'
        description: 数据
      msg:
        description: 消息
        type: string
    type: object
  entity.CommonResponse-schema_User:
    properties:
      code:
        description: 代码
        type: integer
      data:
        allOf:
        - $ref: '#/definitions/schema.User'
        description: 数据
      msg:
        description: 消息
        type: string
    type: object
  entity.CommonResponse-schema_UserSession:
    properties:
      code:
        description: 代码
        type: integer
      data:
        allOf:
        - $ref: '#/definitions/schema.UserSession'
        description: 数据
      msg:
        description: 消息
        type: string
    type: object
  entity.CommonResponse-string:
    properties:
      code:
        description: 代码
        type: integer
      data:
        description: 数据
        type: string
      msg:
        description: 消息
        type: string
    type: object
  entity.ConfigChatModel:
    properties:
      display_name:
        type: string
      icon:
        type: string
      is_default:
        type: boolean
      name:
        type: string
      order:
        type: integer
    type: object
  entity.PaginatedContinuationResponse-schema_UserSession:
    properties:
      list:
        items:
          $ref: '#/definitions/schema.UserSession'
        type: array
      next_page:
        type: integer
    type: object
  entity.PaginatedSyncListResponse-schema_UserSession:
    properties:
      deleted:
        items:
          $ref: '#/definitions/schema.UserSession'
        type: array
      next_page:
        type: integer
      updated:
        items:
          $ref: '#/definitions/schema.UserSession'
        type: array
    type: object
  entity.PaginatedTotalResponse-schema_APIKey:
    properties:
      list:
        items:
          $ref: '#/definitions/schema.APIKey'
        type: array
      total:
        type: integer
    type: object
  entity.PaginatedTotalResponse-schema_Bucket:
    properties:
      list:
        items:
          $ref: '#/definitions/schema.Bucket'
        type: array
      total:
        type: integer
    type: object
  entity.PaginatedTotalResponse-schema_Course:
    properties:
      list:
        items:
          $ref: '#/definitions/schema.Course'
        type: array
      total:
        type: integer
    type: object
  entity.PaginatedTotalResponse-schema_Model:
    properties:
      list:
        items:
          $ref: '#/definitions/schema.Model'
        type: array
      total:
        type: integer
    type: object
  entity.PaginatedTotalResponse-schema_ModelCollection:
    properties:
      list:
        items:
          $ref: '#/definitions/schema.ModelCollection'
        type: array
      total:
        type: integer
    type: object
  entity.PaginatedTotalResponse-schema_Permission:
    properties:
      list:
        items:
          $ref: '#/definitions/schema.Permission'
        type: array
      total:
        type: integer
    type: object
  entity.PaginatedTotalResponse-schema_Problem:
    properties:
      list:
        items:
          $ref: '#/definitions/schema.Problem'
        type: array
      total:
        type: integer
    type: object
  entity.PaginatedTotalResponse-schema_Provider:
    properties:
      list:
        items:
          $ref: '#/definitions/schema.Provider'
        type: array
      total:
        type: integer
    type: object
  entity.PaginatedTotalResponse-schema_Role:
    properties:
      list:
        items:
          $ref: '#/definitions/schema.Role'
        type: array
      total:
        type: integer
    type: object
  entity.PaginatedTotalResponse-schema_User:
    properties:
      list:
        items:
          $ref: '#/definitions/schema.User'
        type: array
      total:
        type: integer
    type: object
  entity.ReqUpdateBody-schema_Bucket:
    properties:
      data:
        $ref: '#/definitions/schema.Bucket'
      updates:
        items:
          type: string
        minItems: 1
        type: array
    required:
    - data
    - updates
    type: object
  entity.ReqUpdateBody-schema_ModelCollection:
    properties:
      data:
        $ref: '#/definitions/schema.ModelCollection'
      updates:
        items:
          type: string
        minItems: 1
        type: array
    required:
    - data
    - updates
    type: object
  entity.ReqUpdateBody-schema_Problem:
    properties:
      data:
        $ref: '#/definitions/schema.Problem'
      updates:
        items:
          type: string
        minItems: 1
        type: array
    required:
    - data
    - updates
    type: object
  entity.ReqUpdateBody-schema_Role:
    properties:
      data:
        $ref: '#/definitions/schema.Role'
      updates:
        items:
          type: string
        minItems: 1
        type: array
    required:
    - data
    - updates
    type: object
  entity.ReqUpdateBody-schema_Session:
    properties:
      data:
        $ref: '#/definitions/schema.Session'
      updates:
        items:
          type: string
        minItems: 1
        type: array
    required:
    - data
    - updates
    type: object
  exam.SubmitExamRequest:
    properties:
      answers:
        description: 答案列表
        items:
          $ref: '#/definitions/exam.SubmitExamRequestAnswer'
        minItems: 1
        type: array
      time_spent:
        description: 答题用时（秒）
        type: integer
    type: object
  exam.SubmitExamRequestAnswer:
    properties:
      answer: {}
      problem_id:
        type: integer
    type: object
  exam.SubmitExamResponse:
    properties:
      record_id:
        description: 记录ID
        type: integer
    type: object
  exam.SubmitProblemResponse:
    properties:
      comment:
        type: string
      score:
        type: integer
    type: object
  manage.UpdateSystemConfigParams:
    properties:
      name:
        type: string
      value:
        additionalProperties:
          type: string
        type: object
    type: object
  schema.APIKey:
    properties:
      created_at:
        type: string
      id:
        type: integer
      key:
        description: API 密钥
        type: string
      provider_id:
        description: 外键，指向 Provider
        type: integer
    type: object
  schema.Bucket:
    properties:
      access_key_id:
        type: string
      bucket_name:
        type: string
      created_at:
        type: string
      display_name:
        type: string
      endpoint_url:
        type: string
      id:
        type: integer
      region:
        type: string
      secret_access_key:
        type: string
      updated_at:
        type: string
    type: object
  schema.Course:
    properties:
      created_at:
        type: string
      description:
        description: 课程描述
        type: string
      exams:
        description: 课程考试
        items:
          $ref: '#/definitions/schema.CourseExam'
        type: array
      id:
        description: 原始数据
        type: integer
      name:
        description: 课程名称
        type: string
      resources:
        description: 关联数据
        items:
          $ref: '#/definitions/schema.CourseResource'
        type: array
      sorted_data:
        description: 排好序的数据
        items: {}
        type: array
      updated_at:
        type: string
    type: object
  schema.CourseExam:
    properties:
      course_id:
        description: 关联课程ID
        type: integer
      exam:
        allOf:
        - $ref: '#/definitions/schema.Exam'
        description: 考试详细信息
      exam_id:
        description: 关联考试ID
        type: integer
      id:
        type: integer
      sort_order:
        description: 考试排序
        type: integer
    type: object
  schema.CourseResource:
    properties:
      course_id:
        description: 关联课程ID
        type: integer
      id:
        type: integer
      resource:
        allOf:
        - $ref: '#/definitions/schema.Resource'
        description: 资源详细信息
      resource_id:
        description: 关联资源ID
        type: integer
      sort_order:
        description: 资源排序
        type: integer
    type: object
  schema.Exam:
    properties:
      created_at:
        type: string
      description:
        description: 考试描述
        type: string
      id:
        type: integer
      limit_time:
        description: 考试限时（单位：秒）
        type: integer
      name:
        type: string
      problems:
        description: 考试包含的大题
        items:
          $ref: '#/definitions/schema.ExamProblem'
        type: array
      subjects:
        description: 所属科目分类
        type: string
      total_score:
        description: 考试总分（单位：0.01分）
        type: integer
      updated_at:
        type: string
    type: object
  schema.ExamProblem:
    properties:
      exam_id:
        description: 关联考试ID
        type: integer
      problem:
        allOf:
        - $ref: '#/definitions/schema.Problem'
        description: 题目详细信息
      problem_id:
        description: 关联题目ID
        type: integer
      score:
        description: 题目分值（1表示0.01分）
        type: integer
      sort_order:
        description: 题目排序
        type: integer
    type: object
  schema.ExamUserRecord:
    properties:
      answers:
        description: 用户答案（关联表储存）
        items:
          $ref: '#/definitions/schema.ExamUserRecordAnswer'
        type: array
      created_at:
        type: string
      exam:
        allOf:
        - $ref: '#/definitions/schema.Exam'
        description: 组装字段
      exam_id:
        description: 考试ID
        type: integer
      id:
        description: 普通字段
        type: integer
      status:
        allOf:
        - $ref: '#/definitions/schema.ScoreStatus'
        description: 总评分状态
      time_spent:
        description: 答题用时（单位：秒）
        type: integer
      total_score:
        description: 总得分（单位：0.01分）
        type: integer
      updated_at:
        type: string
      user_id:
        description: 用户ID
        type: integer
    type: object
  schema.ExamUserRecordAnswer:
    properties:
      answer:
        description: 用户答案
      comments:
        description: 评语/反馈
        type: string
      exam_id:
        description: 测验 ID
        type: integer
      problem_id:
        description: 题目 ID
        type: integer
      score:
        description: 得分（单位：0.01分）
        type: integer
      status:
        allOf:
        - $ref: '#/definitions/schema.ScoreStatus'
        description: 评分状态
    type: object
  schema.Message:
    properties:
      content:
        type: string
      created_at:
        type: string
      extra:
        type: object
      id:
        description: 默认结构
        type: integer
      model:
        allOf:
        - $ref: '#/definitions/schema.Model'
        description: 组装结构
      model_id:
        description: 回复所使用的模型
        type: integer
      preset:
        $ref: '#/definitions/schema.Preset'
      preset_id:
        description: 回复所使用的预设
        type: integer
      reasoning_content:
        type: string
      role:
        description: user/assistant/system
        type: string
      session_id:
        type: string
      token_usage:
        type: integer
    type: object
  schema.Model:
    properties:
      active:
        description: 是否启用
        type: boolean
      config:
        allOf:
        - $ref: '#/definitions/schema.ModelConfig'
        description: 使用 JSON 储存配置
      created_at:
        type: string
      description:
        description: 额外模型描述
        type: string
      display_name:
        description: 对外展示模型名称
        type: string
      icon:
        description: 模型图标
        type: string
      id:
        description: 原始数据
        type: integer
      name:
        description: 模型名称
        type: string
      provider:
        allOf:
        - $ref: '#/definitions/schema.Provider'
        description: 组装数据
      provider_id:
        description: 关联的 Provider ID
        type: integer
      updated_at:
        type: string
    type: object
  schema.ModelCollection:
    properties:
      created_at:
        type: string
      description:
        description: 额外描述
        type: string
      display_name:
        description: 展示名称
        type: string
      icon:
        description: 图标
        type: string
      id:
        type: integer
      models:
        description: 关联的模型
        items:
          $ref: '#/definitions/schema.Model'
        type: array
      name:
        description: 唯一标识名称
        type: string
    type: object
  schema.ModelConfig:
    properties:
      allow_system_prompt:
        description: 是否允许用户自行修改系统提示
        type: boolean
      default_temperature:
        description: 默认温度
        type: number
      frequency_penalty:
        type: number
      max_tokens:
        type: integer
      presence_penalty:
        type: number
      system_prompt:
        description: 预设系统提示
        type: string
      top_p:
        type: number
    type: object
  schema.Permission:
    properties:
      active:
        description: 是否启用（唯一可设置的字段）
        type: boolean
      created_at:
        type: string
      description:
        description: 权限描述
        type: string
      id:
        type: integer
      module:
        description: 所属模块（handler名称）
        type: string
      name:
        description: 权限名称
        type: string
      path:
        description: 权限路径（形如：POST:/user/create）
        type: string
      updated_at:
        type: string
    type: object
  schema.Preset:
    properties:
      created_at:
        type: string
      description:
        description: 角色描述
        type: string
      id:
        description: 原始数据
        type: integer
      name:
        description: 角色名称
        type: string
      prompt_session:
        allOf:
        - $ref: '#/definitions/schema.Session'
        description: 组装数据
      prompt_session_id:
        description: 引用一个 session 中的对话作为 prompt
        type: string
      type:
        description: 角色所属模块（chat、tue 等）
        type: string
      updated_at:
        type: string
      version:
        description: 预设版本号，可能被用于标记是否需要强制更新
        type: integer
    type: object
  schema.Problem:
    properties:
      answer:
        allOf:
        - $ref: '#/definitions/schema.ProblemAnswer'
        description: 答案（JSON存储ProblemAnswer）
      created_at:
        type: string
      description:
        description: 支持HTML/Markdown
        type: string
      difficulty:
        description: 难度等级 1-5
        maximum: 5
        minimum: 1
        type: integer
      explanation:
        description: 答案解析
        type: string
      id:
        type: integer
      options:
        description: 选项（JSON存储ProblemOption数组）
        items:
          $ref: '#/definitions/schema.ProblemOption'
        type: array
      subject:
        description: 所属科目/分类
        type: string
      type:
        $ref: '#/definitions/schema.ProblemType'
      updated_at:
        type: string
    type: object
  schema.ProblemAnswer:
    properties:
      answer:
        description: |-
          选择题：存储正确选项ID []uint
          填空题：存储多个填空关键词 []string
          判断题：true/false
          简答题：文本答案 string
    type: object
  schema.ProblemOption:
    properties:
      content:
        type: string
      correct:
        description: 是否正确答案
        type: boolean
      id:
        type: integer
    type: object
  schema.ProblemType:
    enum:
    - single_choice
    - multiple_choice
    - fill_blank
    - short_answer
    - true_false
    type: string
    x-enum-varnames:
    - SingleChoice
    - MultipleChoice
    - FillBlank
    - ShortAnswer
    - TrueFalse
  schema.Provider:
    properties:
      api_keys:
        description: 一对多关系，与 APIKey 模型关联
        items:
          $ref: '#/definitions/schema.APIKey'
        type: array
      base_url:
        description: API 的基本 URL
        type: string
      created_at:
        type: string
      description:
        description: 额外提供商描述
        type: string
      display_name:
        description: 对外展示提供商名称
        type: string
      icon:
        description: 供应商图标
        type: string
      id:
        type: integer
      models:
        description: 一对多关系，与 Model 模型关联
        items:
          $ref: '#/definitions/schema.Model'
        type: array
      name:
        description: 提供商名称
        type: string
      updated_at:
        type: string
    type: object
  schema.Resource:
    properties:
      created_at:
        type: string
      description:
        description: 资源描述
        type: string
      file_key:
        description: 文件的 uuid key
        type: string
      file_name:
        description: OSS 中的文件名
        type: string
      id:
        type: integer
      origin_file_name:
        description: 原始文件名
        type: string
      updated_at:
        type: string
    type: object
  schema.Role:
    properties:
      active:
        description: 是否启用
        type: boolean
      created_at:
        type: string
      description:
        description: 角色描述
        type: string
      display_name:
        description: 角色名称
        type: string
      id:
        type: integer
      name:
        description: 角色名称
        type: string
      permissions:
        description: 多对多关联
        items:
          $ref: '#/definitions/schema.Permission'
        type: array
      updated_at:
        type: string
    type: object
  schema.ScoreStatus:
    enum:
    - pending
    - scoring
    - completed
    - failed
    type: string
    x-enum-comments:
      StatusCompleted: 评分完成
      StatusFailed: 评分失败
      StatusPending: 待评分
      StatusScoring: 评分中
    x-enum-varnames:
    - StatusPending
    - StatusScoring
    - StatusCompleted
    - StatusFailed
  schema.Session:
    properties:
      context_size:
        description: 上下文大小
        type: integer
      created_at:
        type: string
      enable_context:
        description: 上下文开关
        type: boolean
      id:
        description: 原始数据
        type: string
      last_active:
        type: string
      messages:
        description: 组装数据
        items:
          $ref: '#/definitions/schema.Message'
        type: array
      name:
        type: string
      name_type:
        allOf:
        - $ref: '#/definitions/schema.SessionNameType'
        description: 标题来源
      system_prompt:
        description: 系统提示词
        type: string
      updated_at:
        type: string
    type: object
  schema.SessionFlagInfo:
    properties:
      star:
        description: 标星
        type: boolean
    type: object
  schema.SessionNameType:
    enum:
      - 0
    - 1
    - 2
    type: integer
    x-enum-varnames:
      - SessionNameTypeNone
      - SessionNameTypeTemp
    - SessionNameTypeSystem
  schema.SessionShareInfo:
    properties:
      code:
        description: 邀请码（可选）
        type: string
      expired_at:
        description: 邀请过期时间
        type: integer
      permanent:
        description: 是否永久分享
        type: boolean
      title:
        description: 分享标题
        type: string
    type: object
  schema.User:
    properties:
      created_at:
        type: string
      id:
        type: integer
      password:
        type: string
      roles:
        description: 用户与角色之间的多对多关系
        items:
          $ref: '#/definitions/schema.Role'
        type: array
      updated_at:
        type: string
      username:
        type: string
    type: object
  schema.UserSession:
    properties:
      created_at:
        type: string
      flag_info:
        $ref: '#/definitions/schema.SessionFlagInfo'
      session:
        allOf:
        - $ref: '#/definitions/schema.Session'
        description: 组装数据
      session_id:
        type: string
      share_info:
        allOf:
        - $ref: '#/definitions/schema.SessionShareInfo'
        description: 分享字段
      type:
        $ref: '#/definitions/schema.UserSessionType'
      updated_at:
        type: string
      user_id:
        description: 原始数据
        type: integer
    type: object
  schema.UserSessionType:
    enum:
    - 1
    - 2
    type: integer
    x-enum-varnames:
    - UserSessionTypeOwner
    - UserSessionTypeInvitee
  user.Login.loginRequest:
    properties:
      password:
        type: string
      username:
        type: string
    required:
    - password
    - username
    type: object
  user.Register.registerRequest:
    properties:
      password:
        type: string
      username:
        type: string
    required:
    - password
    - username
    type: object
info:
  contact: {}
paths:
  /base/public-key:
    get:
      description: 获取公钥
      produces:
      - application/json
      responses:
        "200":
          description: RSA 公钥
          schema:
            $ref: '#/definitions/entity.CommonResponse-string'
      summary: 获取公钥
      tags:
      - Base
  /chat/completion/stream/{session_id}:
    post:
      consumes:
      - application/json
      description: 流式输出聊天
      parameters:
      - description: 会话 ID
        in: path
        name: session_id
        required: true
        type: string
      - description: 用户输入及参数
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/chat.CompletionStream.userInput'
      produces:
      - text/event-stream
      responses: {}
      summary: 流式输出聊天
      tags:
      - Chat
  /chat/config/bots:
    get:
      consumes:
      - application/json
      description: 获取 bot 角色配置
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/entity.CommonResponse-array_schema_Preset'
      summary: 获取 bot 角色配置
      tags:
      - config
  /chat/config/models:
    get:
      consumes:
      - application/json
      description: 获取模型配置
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/entity.CommonResponse-array_entity_ConfigChatModel'
      summary: 获取模型配置
      tags:
      - config
  /chat/message/{id}/update:
    post:
      consumes:
      - application/json
      description: 更新消息
      parameters:
      - description: 消息 ID
        in: path
        name: id
        required: true
        type: string
      - description: 更新的消息数据
        in: body
        name: req
        required: true
        schema:
          $ref: '#/definitions/schema.Message'
      produces:
      - application/json
      responses:
        "200":
          description: 返回数据
          schema:
            $ref: '#/definitions/entity.CommonResponse-schema_Message'
      summary: 更新消息
      tags:
      - Message
  /chat/message/list/{session_id}:
    get:
      consumes:
      - application/json
      description: 获取消息
      parameters:
      - description: 会话 ID
        in: path
        name: session_id
        required: true
        type: string
      - in: query
        name: end_time
        type: integer
      - description: 分页参数
        in: query
        name: page_num
        type: integer
      - in: query
        name: page_size
        type: integer
      - in: query
        name: sort_expr
        type: string
      - in: query
        name: start_time
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: 返回数据
          schema:
            $ref: '#/definitions/entity.CommonResponse-chat_ChatMessageListResponse'
      summary: 获取消息
      tags:
      - Message
  /chat/message/list/{session_id}/shared:
    get:
      consumes:
      - application/json
      description: 获取分享过的消息
      parameters:
      - description: 会话 ID
        in: path
        name: session_id
        required: true
        type: string
      - in: query
        name: code
        type: string
      - in: query
        name: end_time
        type: integer
      - description: 分页参数
        in: query
        name: page_num
        type: integer
      - in: query
        name: page_size
        type: integer
      - in: query
        name: sort_expr
        type: string
      - in: query
        name: start_time
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: 返回数据
          schema:
            $ref: '#/definitions/entity.CommonResponse-chat_ChatMessageListResponse'
      summary: 获取分享过的消息
      tags:
      - Message
  /chat/session/{session_id}:
    get:
      consumes:
      - application/json
      description: 获取会话
      parameters:
      - description: 会话 ID
        in: path
        name: session_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: 返回数据
          schema:
            $ref: '#/definitions/entity.CommonResponse-schema_Session'
      summary: 获取会话
      tags:
      - Session
  /chat/session/{session_id}/shared:
    get:
      consumes:
      - application/json
      description: 获取已分享的用户会话信息（仅返回 Name）
      parameters:
      - description: 会话 ID
        in: path
        name: session_id
        required: true
        type: string
      - in: query
        name: code
        type: string
      - description: 尝试获取而不抛出错误
        in: query
        name: touch
        type: boolean
      produces:
      - application/json
      responses:
        "200":
          description: 返回数据
          schema:
            $ref: '#/definitions/entity.CommonResponse-schema_Session'
      summary: 获取已分享的用户会话信息
      tags:
      - Session
  /chat/session/del/{session_id}:
    post:
      consumes:
      - application/json
      description: 删除会话
      parameters:
      - description: 会话 ID
        in: path
        name: session_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/entity.CommonResponse-bool'
      summary: 删除会话
      tags:
      - Session
  /chat/session/flag/{session_id}:
    post:
      consumes:
      - application/json
      description: 更新用户会话标记
      parameters:
      - description: 会话 ID
        in: path
        name: session_id
        required: true
        type: string
      - description: 会话信息
        in: body
        name: req
        required: true
        schema:
          $ref: '#/definitions/schema.SessionFlagInfo'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/entity.CommonResponse-bool'
      summary: 更新用户会话标记
      tags:
      - Session
  /chat/session/list:
    get:
      consumes:
      - application/json
      description: 获取会话列表
      parameters:
      - in: query
        name: end_time
        type: integer
      - description: 分页参数
        in: query
        name: page_num
        type: integer
      - in: query
        name: page_size
        type: integer
      - in: query
        name: sort_expr
        type: string
      - in: query
        name: start_time
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: 返回数据
          schema:
            $ref: '#/definitions/entity.CommonResponse-entity_PaginatedContinuationResponse-schema_UserSession'
      summary: 获取会话列表
      tags:
      - Session
  /chat/session/new:
    post:
      consumes:
      - application/json
      description: 创建会话
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/entity.CommonResponse-string'
      summary: 创建会话
      tags:
      - Session
  /chat/session/share/{session_id}:
    post:
      consumes:
      - application/json
      description: 分享会话
      parameters:
      - description: 会话 ID
        in: path
        name: session_id
        required: true
        type: string
      - description: 分享信息
        in: body
        name: req
        required: true
        schema:
          $ref: '#/definitions/chat.ShareSession.ShareRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/entity.CommonResponse-bool'
      summary: 分享会话
      tags:
      - Session
  /chat/session/sync:
    get:
      consumes:
      - application/json
      description: 同步会话列表
      parameters:
      - description: 客户端上次同步时间戳
        in: query
        name: last_sync_time
        required: true
        type: integer
      - description: 分页参数
        in: query
        name: page_num
        type: integer
      - in: query
        name: page_size
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: 返回数据
          schema:
            $ref: '#/definitions/entity.CommonResponse-entity_PaginatedSyncListResponse-schema_UserSession'
      summary: 同步会话列表
      tags:
      - Session
  /chat/session/update/{session_id}:
    post:
      consumes:
      - application/json
      description: 更新会话
      parameters:
      - description: 会话 ID
        in: path
        name: session_id
        required: true
        type: string
      - description: 会话信息
        in: body
        name: req
        required: true
        schema:
          $ref: '#/definitions/entity.ReqUpdateBody-schema_Session'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/entity.CommonResponse-bool'
      summary: 更新会话
      tags:
      - Session
  /chat/session/user/{session_id}:
    get:
      consumes:
      - application/json
      description: 获取用户会话
      parameters:
      - description: 会话 ID
        in: path
        name: session_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: 返回数据
          schema:
            $ref: '#/definitions/entity.CommonResponse-schema_UserSession'
      summary: 获取用户会话
      tags:
      - Session
  /manage/bucket/{id}:
    get:
      consumes:
      - application/json
      description: 获取 储存桶
      parameters:
      - description: 储存桶 ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: 储存桶
          schema:
            $ref: '#/definitions/entity.CommonResponse-schema_Bucket'
      summary: 获取 储存桶
      tags:
      - Bucket
  /manage/bucket/{id}/delete:
    post:
      consumes:
      - application/json
      description: 删除 储存桶
      parameters:
      - description: 储存桶 ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: 删除成功与否
          schema:
            $ref: '#/definitions/entity.CommonResponse-bool'
      summary: 删除 储存桶
      tags:
      - Bucket
  /manage/bucket/{id}/update:
    post:
      consumes:
      - application/json
      description: 更新 储存桶
      parameters:
      - description: 储存桶 ID
        in: path
        name: id
        required: true
        type: integer
      - description: 储存桶参数
        in: body
        name: bucket
        required: true
        schema:
          $ref: '#/definitions/entity.ReqUpdateBody-schema_Bucket'
      produces:
      - application/json
      responses:
        "200":
          description: 更新成功与否
          schema:
            $ref: '#/definitions/entity.CommonResponse-bool'
      summary: 更新 储存桶
      tags:
      - Bucket
  /manage/bucket/create:
    post:
      consumes:
      - application/json
      description: 创建 储存桶
      parameters:
      - description: 储存桶参数
        in: body
        name: bucket
        required: true
        schema:
          $ref: '#/definitions/schema.Bucket'
      produces:
      - application/json
      responses:
        "200":
          description: 成功创建的 储存桶
          schema:
            $ref: '#/definitions/entity.CommonResponse-schema_Bucket'
      summary: 创建 储存桶
      tags:
      - Bucket
  /manage/bucket/list:
    get:
      consumes:
      - application/json
      description: 批量获取 储存桶
      parameters:
      - in: query
        name: end_time
        type: integer
      - description: 分页参数
        in: query
        name: page_num
        type: integer
      - in: query
        name: page_size
        type: integer
      - in: query
        name: sort_expr
        type: string
      - in: query
        name: start_time
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: 储存桶列表
          schema:
            $ref: '#/definitions/entity.CommonResponse-entity_PaginatedTotalResponse-schema_Bucket'
      summary: 批量获取 储存桶
      tags:
      - Bucket
  /manage/collection/{id}:
    get:
      consumes:
      - application/json
      description: 获取模型集合
      parameters:
      - description: ModelCollection ID
        in: path
        name: collection_id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: 模型
          schema:
            $ref: '#/definitions/entity.CommonResponse-schema_ModelCollection'
      summary: 获取模型集合
      tags:
      - ModelCollection
  /manage/collection/{id}/delete:
    post:
      consumes:
      - application/json
      description: 删除模型集合
      parameters:
      - description: ModelCollection ID
        in: path
        name: collection_id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: 删除成功与否
          schema:
            $ref: '#/definitions/entity.CommonResponse-bool'
      summary: 删除模型集合
      tags:
      - Model
  /manage/collection/{id}/update:
    post:
      consumes:
      - application/json
      description: 更新模型集合
      parameters:
      - description: 模型集合 ID
        in: path
        name: id
        required: true
        type: integer
      - description: 模型集合更新参数
        in: body
        name: model
        required: true
        schema:
          $ref: '#/definitions/entity.ReqUpdateBody-schema_ModelCollection'
      produces:
      - application/json
      responses:
        "200":
          description: 成功更新与否
          schema:
            $ref: '#/definitions/entity.CommonResponse-bool'
      summary: 更新模型集合
      tags:
      - ModelCollection
  /manage/collection/create:
    post:
      consumes:
      - application/json
      description: 创建模型集合
      parameters:
      - description: 模型集合
        in: body
        name: model
        required: true
        schema:
          $ref: '#/definitions/schema.ModelCollection'
      produces:
      - application/json
      responses:
        "200":
          description: 成功创建的模型集合
          schema:
            $ref: '#/definitions/entity.CommonResponse-schema_ModelCollection'
      summary: 创建模型集合
      tags:
      - ModelCollection
  /manage/collection/list:
    get:
      consumes:
      - application/json
      description: 批量获取模型集合
      parameters:
      - in: query
        name: end_time
        type: integer
      - description: 分页参数
        in: query
        name: page_num
        type: integer
      - in: query
        name: page_size
        type: integer
      - in: query
        name: sort_expr
        type: string
      - in: query
        name: start_time
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: 模型集合列表
          schema:
            $ref: '#/definitions/entity.CommonResponse-entity_PaginatedTotalResponse-schema_ModelCollection'
      summary: 批量获取模型集合
      tags:
      - ModelCollection
  /manage/key/{id}/delete:
    post:
      consumes:
      - application/json
      description: 删除 APIKey
      parameters:
      - description: API Key ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: 删除成功与否
          schema:
            $ref: '#/definitions/entity.CommonResponse-bool'
      summary: 删除 APIKey
      tags:
      - APIKey
  /manage/key/create:
    post:
      consumes:
      - application/json
      description: 创建 APIKey 并绑定 到 API 提供商
      parameters:
      - description: API Key
        in: body
        name: apikey
        required: true
        schema:
          $ref: '#/definitions/schema.APIKey'
      produces:
      - application/json
      responses:
        "200":
          description: 成功创建的 API Key
          schema:
            $ref: '#/definitions/entity.CommonResponse-schema_APIKey'
      summary: 创建 APIKey
      tags:
      - APIKey
  /manage/key/list/provider/{id}:
    get:
      consumes:
      - application/json
      description: 列出供应商的 APIKey
      parameters:
      - description: API 提供商 ID
        in: path
        name: id
        required: true
        type: integer
      - in: query
        name: end_time
        type: integer
      - description: 分页参数
        in: query
        name: page_num
        type: integer
      - in: query
        name: page_size
        type: integer
      - in: query
        name: sort_expr
        type: string
      - in: query
        name: start_time
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: 成功创建的 API Key
          schema:
            $ref: '#/definitions/entity.CommonResponse-entity_PaginatedTotalResponse-schema_APIKey'
      summary: 列出APIKey
      tags:
      - APIKey
  /manage/model/{model_id}:
    get:
      consumes:
      - application/json
      description: 获取模型
      parameters:
      - description: Model ID
        in: path
        name: model_id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: 模型
          schema:
            $ref: '#/definitions/entity.CommonResponse-schema_Model'
      summary: 获取模型
      tags:
      - Model
  /manage/model/create:
    post:
      consumes:
      - application/json
      description: 创建模型并绑定到 API 供应商
      parameters:
      - description: 模型
        in: body
        name: model
        required: true
        schema:
          $ref: '#/definitions/schema.Model'
      produces:
      - application/json
      responses:
        "200":
          description: 成功创建的模型
          schema:
            $ref: '#/definitions/entity.CommonResponse-schema_Model'
      summary: 创建模型
      tags:
      - Model
  /manage/model/delete/{model_id}:
    post:
      consumes:
      - application/json
      description: 删除模型
      parameters:
      - description: Model ID
        in: path
        name: model_id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: 删除成功与否
          schema:
            $ref: '#/definitions/entity.CommonResponse-bool'
      summary: 删除模型
      tags:
      - Model
  /manage/model/list:
    get:
      consumes:
      - application/json
      description: 批量获取模型
      parameters:
      - in: query
        name: end_time
        type: integer
      - description: 分页参数
        in: query
        name: page_num
        type: integer
      - in: query
        name: page_size
        type: integer
      - in: query
        name: sort_expr
        type: string
      - in: query
        name: start_time
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: 模型列表
          schema:
            $ref: '#/definitions/entity.CommonResponse-entity_PaginatedTotalResponse-schema_Model'
      summary: 批量获取模型
      tags:
      - Model
  /manage/model/provider/{provider_id}:
    get:
      consumes:
      - application/json
      description: 获取 API 提供商的模型
      parameters:
      - description: Provider ID
        in: path
        name: provider_id
        required: true
        type: integer
      - in: query
        name: end_time
        type: integer
      - description: 分页参数
        in: query
        name: page_num
        type: integer
      - in: query
        name: page_size
        type: integer
      - in: query
        name: sort_expr
        type: string
      - in: query
        name: start_time
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: 模型列表
          schema:
            $ref: '#/definitions/entity.CommonResponse-entity_PaginatedTotalResponse-schema_Model'
      summary: 获取 API 提供商的模型
      tags:
      - Model
  /manage/model/refresh:
    post:
      consumes:
      - application/json
      description: 更新所有模型缓存，生产环境高危操作
      produces:
      - application/json
      responses:
        "200":
          description: 更新成功与否
          schema:
            $ref: '#/definitions/entity.CommonResponse-bool'
      summary: manageModelGroup
      tags:
      - Model
  /manage/model/update:
    post:
      consumes:
      - application/json
      description: Update 更新模型，若参数不传入或为空，则不会更新
      parameters:
      - description: 模型
        in: body
        name: model
        required: true
        schema:
          $ref: '#/definitions/schema.Model'
      produces:
      - application/json
      responses:
        "200":
          description: 更新成功与否
          schema:
            $ref: '#/definitions/entity.CommonResponse-bool'
      summary: 更新模型
      tags:
      - Model
  /manage/permission/{id}:
    get:
      consumes:
      - application/json
      description: 获取权限
      parameters:
      - description: 权限 ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: 权限
          schema:
            $ref: '#/definitions/entity.CommonResponse-schema_Permission'
      summary: 获取权限
      tags:
      - Permission
  /manage/permission/{id}/update:
    post:
      consumes:
      - application/json
      description: 更新权限
      parameters:
      - description: 权限 ID
        in: path
        name: id
        required: true
        type: integer
      - description: 权限参数
        in: body
        name: permission
        required: true
        schema:
          $ref: '#/definitions/schema.Permission'
      produces:
      - application/json
      responses:
        "200":
          description: 更新成功与否
          schema:
            $ref: '#/definitions/entity.CommonResponse-bool'
      summary: 更新权限
      tags:
      - Permission
  /manage/permission/list:
    get:
      consumes:
      - application/json
      description: 批量分页获取权限
      parameters:
      - in: query
        name: end_time
        type: integer
      - description: 分页参数
        in: query
        name: page_num
        type: integer
      - in: query
        name: page_size
        type: integer
      - in: query
        name: sort_expr
        type: string
      - in: query
        name: start_time
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: 权限列表
          schema:
            $ref: '#/definitions/entity.CommonResponse-entity_PaginatedTotalResponse-schema_Permission'
      summary: 批量分页获取权限
      tags:
      - Permission
  /manage/provider/{id}/delete:
    post:
      consumes:
      - application/json
      description: 删除 API 提供商
      parameters:
      - description: API 提供商 ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: 删除成功与否
          schema:
            $ref: '#/definitions/entity.CommonResponse-bool'
      summary: 删除 API 提供商
      tags:
      - Provider
  /manage/provider/{id}/update:
    post:
      consumes:
      - application/json
      description: 更新 API 提供商
      parameters:
      - description: API 提供商 ID
        in: path
        name: id
        required: true
        type: integer
      - description: API 提供商参数
        in: body
        name: provider
        required: true
        schema:
          $ref: '#/definitions/schema.Provider'
      produces:
      - application/json
      responses:
        "200":
          description: 更新成功与否
          schema:
            $ref: '#/definitions/entity.CommonResponse-bool'
      summary: 更新 API 提供商
      tags:
      - Provider
  /manage/provider/{provider_id}:
    get:
      consumes:
      - application/json
      description: 获取 API 提供商
      parameters:
      - description: API 提供商 ID
        in: path
        name: provider_id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: API 提供商
          schema:
            $ref: '#/definitions/entity.CommonResponse-schema_Provider'
      summary: 获取 API 提供商
      tags:
      - Provider
  /manage/provider/all:
    get:
      consumes:
      - application/json
      description: 获取所有 API 提供商
      produces:
      - application/json
      responses:
        "200":
          description: API 提供商列表
          schema:
            $ref: '#/definitions/entity.CommonResponse-array_schema_Provider'
      summary: 获取所有 API 提供商
      tags:
      - Provider
  /manage/provider/create:
    post:
      consumes:
      - application/json
      description: 创建 API 提供商
      parameters:
      - description: API 提供商参数
        in: body
        name: provider
        required: true
        schema:
          $ref: '#/definitions/schema.Provider'
      produces:
      - application/json
      responses:
        "200":
          description: 成功创建的 API 提供商
          schema:
            $ref: '#/definitions/entity.CommonResponse-schema_Provider'
      summary: 创建 API 提供商
      tags:
      - Provider
  /manage/provider/list:
    get:
      consumes:
      - application/json
      description: 批量获取 API 提供商
      parameters:
      - in: query
        name: end_time
        type: integer
      - description: 分页参数
        in: query
        name: page_num
        type: integer
      - in: query
        name: page_size
        type: integer
      - in: query
        name: sort_expr
        type: string
      - in: query
        name: start_time
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: API 提供商列表
          schema:
            $ref: '#/definitions/entity.CommonResponse-entity_PaginatedTotalResponse-schema_Provider'
      summary: 批量获取 API 提供商
      tags:
      - Provider
  /manage/role/{id}:
    get:
      consumes:
      - application/json
      description: 获取角色
      parameters:
      - description: 角色 ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: 角色
          schema:
            $ref: '#/definitions/entity.CommonResponse-schema_Role'
      summary: 获取角色
      tags:
      - Role
  /manage/role/{id}/delete:
    post:
      consumes:
      - application/json
      description: 删除角色
      parameters:
      - description: 角色 ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: 删除成功与否
          schema:
            $ref: '#/definitions/entity.CommonResponse-bool'
      summary: 删除角色
      tags:
      - Role
  /manage/role/{id}/update:
    post:
      consumes:
      - application/json
      description: 更新角色
      parameters:
      - description: 角色 ID
        in: path
        name: id
        required: true
        type: integer
      - description: 角色参数
        in: body
        name: role
        required: true
        schema:
          $ref: '#/definitions/entity.ReqUpdateBody-schema_Role'
      produces:
      - application/json
      responses:
        "200":
          description: 更新成功与否
          schema:
            $ref: '#/definitions/entity.CommonResponse-bool'
      summary: 更新角色
      tags:
      - Role
  /manage/role/create:
    post:
      consumes:
      - application/json
      description: 创建角色
      parameters:
      - description: 角色参数
        in: body
        name: role
        required: true
        schema:
          $ref: '#/definitions/schema.Role'
      produces:
      - application/json
      responses:
        "200":
          description: 成功创建的角色
          schema:
            $ref: '#/definitions/entity.CommonResponse-schema_Provider'
      summary: 创建角色
      tags:
      - Role
  /manage/role/list:
    get:
      consumes:
      - application/json
      description: 批量分页获取角色
      parameters:
      - in: query
        name: end_time
        type: integer
      - description: 分页参数
        in: query
        name: page_num
        type: integer
      - in: query
        name: page_size
        type: integer
      - in: query
        name: sort_expr
        type: string
      - in: query
        name: start_time
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: 角色列表
          schema:
            $ref: '#/definitions/entity.CommonResponse-entity_PaginatedTotalResponse-schema_Role'
      summary: 批量分页获取角色
      tags:
      - Role
  /manage/user/{id}:
    get:
      consumes:
      - application/json
      description: 获取用户
      parameters:
      - description: 用户 ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: 用户
          schema:
            $ref: '#/definitions/entity.CommonResponse-schema_User'
      summary: 获取用户
      tags:
      - User
  /manage/user/{id}/delete:
    post:
      consumes:
      - application/json
      description: 删除用户
      parameters:
      - description: 用户 ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: 删除成功与否
          schema:
            $ref: '#/definitions/entity.CommonResponse-bool'
      summary: 删除用户
      tags:
      - User
  /manage/user/{id}/logout:
    post:
      consumes:
      - application/json
      description: 强制登出用户
      parameters:
      - description: 用户 ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: 成功登出的设备数量
          schema:
            $ref: '#/definitions/entity.CommonResponse-int'
      summary: 强制登出用户
      tags:
      - User
  /manage/user/{id}/update:
    post:
      consumes:
      - application/json
      description: 更新用户
      parameters:
      - description: 用户 ID
        in: path
        name: id
        required: true
        type: integer
      - description: 用户参数
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/schema.User'
      produces:
      - application/json
      responses:
        "200":
          description: 更新成功与否
          schema:
            $ref: '#/definitions/entity.CommonResponse-bool'
      summary: 更新用户
      tags:
      - User
  /manage/user/create:
    post:
      consumes:
      - application/json
      description: 创建用户
      parameters:
      - description: 用户参数
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/schema.User'
      produces:
      - application/json
      responses:
        "200":
          description: 成功创建的用户
          schema:
            $ref: '#/definitions/entity.CommonResponse-schema_Provider'
      summary: 创建用户
      tags:
      - User
  /manage/user/list:
    get:
      consumes:
      - application/json
      description: 批量分页获取用户
      parameters:
      - in: query
        name: end_time
        type: integer
      - description: 分页参数
        in: query
        name: page_num
        type: integer
      - in: query
        name: page_size
        type: integer
      - in: query
        name: sort_expr
        type: string
      - in: query
        name: start_time
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: 用户列表
          schema:
            $ref: '#/definitions/entity.CommonResponse-entity_PaginatedTotalResponse-schema_User'
      summary: 批量分页获取用户
      tags:
      - User
  /preset/{id}:
    get:
      consumes:
      - application/json
      description: 根据ID获取指定的预设信息
      parameters:
      - description: 预设ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: 预设信息
          schema:
            $ref: '#/definitions/schema.Preset'
      summary: 获取预设
      tags:
      - Preset
  /preset/{id}/delete:
    post:
      consumes:
      - application/json
      description: 删除指定ID的预设
      parameters:
      - description: 预设ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: 删除成功
          schema:
            type: boolean
      summary: 删除预设
      tags:
      - Preset
  /preset/{id}/update:
    post:
      consumes:
      - application/json
      description: 更新指定ID的预设信息
      parameters:
      - description: 预设ID
        in: path
        name: id
        required: true
        type: integer
      - description: 更新的预设信息
        in: body
        name: role
        required: true
        schema:
          $ref: '#/definitions/schema.Preset'
      produces:
      - application/json
      responses:
        "200":
          description: 更新后的预设信息
          schema:
            $ref: '#/definitions/schema.Preset'
      summary: 更新预设
      tags:
      - Preset
  /preset/create:
    post:
      consumes:
      - application/json
      description: 创建一个新的预设，包含名称、描述和引用的会话ID
      parameters:
      - description: 预设信息
        in: body
        name: role
        required: true
        schema:
          $ref: '#/definitions/schema.Preset'
      produces:
      - application/json
      responses:
        "200":
          description: 成功创建的预设
          schema:
            $ref: '#/definitions/schema.Preset'
      summary: 创建预设
      tags:
      - Preset
  /preset/list:
    get:
      consumes:
      - application/json
      description: 获取所有预设的列表
      produces:
      - application/json
      responses:
        "200":
          description: 预设列表
          schema:
            items:
              $ref: '#/definitions/schema.Preset'
            type: array
      summary: 获取预设列表
      tags:
      - Preset
  /tue/course/{id}:
    get:
      consumes:
      - application/json
      description: 获取单个课程
      parameters:
      - description: 课程 ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: 返回数据
          schema:
            $ref: '#/definitions/entity.CommonResponse-schema_Course'
      summary: 获取单个课程
      tags:
      - Course
  /tue/course/{id}/delete:
    post:
      consumes:
      - application/json
      description: 删除课程
      parameters:
      - description: 课程 ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: 返回数据
          schema:
            $ref: '#/definitions/entity.CommonResponse-any'
      summary: 删除课程
      tags:
      - Course
  /tue/course/create:
    post:
      consumes:
      - application/json
      description: 创建课程基础参数，绑定或创建题目、资源
      parameters:
      - description: 课程内容
        in: body
        name: req
        required: true
        schema:
          $ref: '#/definitions/schema.Course'
      produces:
      - application/json
      responses:
        "200":
          description: 返回数据
          schema:
            $ref: '#/definitions/entity.CommonResponse-schema_Course'
      summary: 创建课程
      tags:
      - Course
  /tue/course/list:
    get:
      consumes:
      - application/json
      description: 获取课程列表
      parameters:
      - in: query
        name: end_time
        type: integer
      - description: 分页参数
        in: query
        name: page_num
        type: integer
      - in: query
        name: page_size
        type: integer
      - in: query
        name: sort_expr
        type: string
      - in: query
        name: start_time
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: 返回数据
          schema:
            $ref: '#/definitions/entity.CommonResponse-entity_PaginatedTotalResponse-schema_Course'
      summary: 获取课程列表
      tags:
      - Course
  /tue/course/update:
    post:
      consumes:
      - application/json
      description: 更新课程基础参数，增量更新 题目、资源
      parameters:
      - description: 课程内容
        in: body
        name: req
        required: true
        schema:
          $ref: '#/definitions/schema.Course'
      produces:
      - application/json
      responses:
        "200":
          description: 返回数据
          schema:
            $ref: '#/definitions/entity.CommonResponse-schema_Course'
      summary: 更新课程
      tags:
      - Course
  /tue/exam/{id}:
    get:
      consumes:
      - application/json
      description: 获取单个测验
      parameters:
      - description: 测验 ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: 返回数据
          schema:
            $ref: '#/definitions/entity.CommonResponse-schema_Exam'
      summary: 获取单个测验
      tags:
      - Exam
  /tue/exam/{id}/records:
    get:
      consumes:
      - application/json
      description: 获取用户的考试评分结果
      parameters:
      - description: 考试记录ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/entity.CommonResponse-schema_ExamUserRecord'
      summary: 获取考试结果
      tags:
      - 考试
  /tue/exam/{id}/rescore:
    post:
      consumes:
      - application/json
      description: 管理员重新评分考试
      parameters:
      - description: 考试记录ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses: {}
      summary: 重新评分考试
      tags:
      - 考试
  /tue/exam/{id}/submit:
    post:
      consumes:
      - application/json
      description: 提交用户的考试答案并进行评分
      parameters:
      - description: 考试ID
        in: path
        name: id
        required: true
        type: integer
      - description: 提交信息
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/exam.SubmitExamRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/entity.CommonResponse-exam_SubmitExamResponse'
      summary: 提交考试答案
      tags:
      - 考试
  /tue/exam/create:
    post:
      consumes:
      - application/json
      description: 保存单个测验
      parameters:
      - description: 测验内容
        in: body
        name: req
        required: true
        schema:
          $ref: '#/definitions/schema.Exam'
      produces:
      - application/json
      responses:
        "200":
          description: 返回数据
          schema:
            $ref: '#/definitions/entity.CommonResponse-schema_Exam'
      summary: 保存单个测验
      tags:
      - Exam
  /tue/exam/random:
    post:
      consumes:
      - application/json
      description: 随机测验
      produces:
      - application/json
      responses:
        "200":
          description: 返回数据
          schema:
            $ref: '#/definitions/entity.CommonResponse-schema_Exam'
      summary: 随机测验
      tags:
      - Exam
  /tue/exam/single-problem/submit:
    post:
      consumes:
      - application/json
      description: 提交单个问题并验证答案
      parameters:
      - description: 提交信息
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/exam.SubmitExamRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/entity.CommonResponse-exam_SubmitProblemResponse'
      summary: 提交单个问题并验证答案
      tags:
      - Exam
  /tue/problem/{id}:
    get:
      consumes:
      - application/json
      description: 获取单个题目
      parameters:
      - description: 题目 ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: 返回数据
          schema:
            $ref: '#/definitions/entity.CommonResponse-schema_Problem'
      summary: 获取单个题目
      tags:
      - Problem
  /tue/problem/{id}/delete:
    post:
      consumes:
      - application/json
      description: 删除题目
      parameters:
      - description: 题目 ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: 删除成功与否
          schema:
            $ref: '#/definitions/entity.CommonResponse-bool'
      summary: 删除题目
      tags:
      - Problem
  /tue/problem/{id}/update:
    post:
      consumes:
      - application/json
      description: 更新题目
      parameters:
      - description: 题目 ID
        in: path
        name: id
        required: true
        type: integer
      - description: 题目参数
        in: body
        name: problem
        required: true
        schema:
          $ref: '#/definitions/entity.ReqUpdateBody-schema_Problem'
      produces:
      - application/json
      responses:
        "200":
          description: 更新成功与否
          schema:
            $ref: '#/definitions/entity.CommonResponse-bool'
      summary: 更新题目
      tags:
      - Problem
  /tue/problem/create:
    post:
      consumes:
      - application/json
      description: 创建单个题目
      parameters:
      - description: 题目结构
        in: body
        name: req
        required: true
        schema:
          $ref: '#/definitions/schema.Problem'
      produces:
      - application/json
      responses:
        "200":
          description: 返回数据
          schema:
            $ref: '#/definitions/entity.CommonResponse-schema_Problem'
      summary: 创建单个题目
      tags:
      - Problem
  /tue/problem/list:
    get:
      consumes:
      - application/json
      description: 分页获取题目列表
      parameters:
      - in: query
        name: end_time
        type: integer
      - description: 分页参数
        in: query
        name: page_num
        type: integer
      - in: query
        name: page_size
        type: integer
      - in: query
        name: sort_expr
        type: string
      - in: query
        name: start_time
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: 返回数据
          schema:
            $ref: '#/definitions/entity.CommonResponse-entity_PaginatedTotalResponse-schema_Problem'
      summary: 分页获取题目列表
      tags:
      - Problem
  /tue/problem/make:
    post:
      consumes:
      - application/json
      description: 创建题目
      parameters:
      - description: 题目要求
        in: body
        name: req
        required: true
        schema:
          $ref: '#/definitions/course.MakeQuestionRequest'
      produces:
      - application/json
      responses:
        "200":
          description: 生成的题目
          schema:
            $ref: '#/definitions/entity.CommonResponse-schema_Problem'
      summary: 创建题目
      tags:
      - Problem
  /user/backdoor/login:
    post:
      consumes:
      - application/json
      description: 后门登录
      parameters:
      - description: 登录请求
        in: body
        name: req
        required: true
        schema:
          $ref: '#/definitions/user.Login.loginRequest'
      produces:
      - application/json
      responses:
        "200":
          description: login successfully
          schema:
            $ref: '#/definitions/entity.CommonResponse-schema_User'
      summary: 后门登录
      tags:
      - User
  /user/current:
    get:
      consumes:
      - application/json
      description: 获取当前用户信息
      produces:
      - application/json
      responses:
        "200":
          description: get current user info successfully
          schema:
            $ref: '#/definitions/entity.CommonResponse-schema_User'
      summary: 获取当前用户信息
      tags:
      - User
  /user/login:
    post:
      consumes:
      - application/json
      description: 用户登录
      parameters:
      - description: 登录请求
        in: body
        name: req
        required: true
        schema:
          $ref: '#/definitions/user.Login.loginRequest'
      produces:
      - application/json
      responses:
        "200":
          description: login successfully
          schema:
            $ref: '#/definitions/entity.CommonResponse-schema_User'
      summary: 用户登录
      tags:
      - User
  /user/logout:
    post:
      consumes:
      - application/json
      description: 用户登出
      produces:
      - application/json
      responses: {}
      summary: 用户登出
      tags:
      - User
  /user/ping:
    post:
      consumes:
      - application/json
      description: 检测客户端登录态
      produces:
      - application/json
      responses:
        "200":
          description: user is online
          schema:
            $ref: '#/definitions/entity.CommonResponse-schema_User'
        "404":
          description: user not found
          schema:
            $ref: '#/definitions/entity.CommonResponse-any'
      summary: 检测客户端登录态
      tags:
      - User
  /user/refresh:
    get:
      description: 刷新登录态
      parameters:
      - description: 刷新用 Token
        in: header
        name: X-Refresh-Token
        required: true
        type: string
      responses:
        "200":
          description: nothing
          schema:
            type: string
      summary: 刷新登录态
      tags:
      - User
  /user/register:
    post:
      consumes:
      - application/json
      description: 用户注册
      parameters:
      - description: 注册请求
        in: body
        name: req
        required: true
        schema:
          $ref: '#/definitions/user.Register.registerRequest'
      produces:
      - application/json
      responses:
        "200":
          description: register successfully
          schema:
            $ref: '#/definitions/entity.CommonResponse-bool'
      summary: 用户注册
      tags:
      - User
swagger: "2.0"
