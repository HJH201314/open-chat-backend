definitions:
  chat.CompletionStream.userInput:
    properties:
      bot_id:
        type: integer
      enable_context:
        type: boolean
      model_name:
        description: Model.Name 准确的模型名称
        type: string
      provider_name:
        description: Provider.Name 准确的供应商名称
        type: string
      question:
        type: string
      system_prompt:
        description: 系统提示词
        type: string
    required:
    - model_name
    - provider_name
    - question
    type: object
  chat.ShareSession.ShareRequest:
    properties:
      active:
        type: boolean
      share_info:
        $ref: '#/definitions/schema.SessionShareInfo'
    type: object
  entity.CommonResponse-any:
    properties:
      code:
        description: 代码
        type: integer
      data:
        description: 数据
      msg:
        description: 消息
        type: string
    type: object
  entity.CommonResponse-array_schema_BotRole:
    properties:
      code:
        description: 代码
        type: integer
      data:
        description: 数据
        items:
          $ref: '#/definitions/schema.BotRole'
        type: array
      msg:
        description: 消息
        type: string
    type: object
  entity.CommonResponse-array_schema_ModelCache:
    properties:
      code:
        description: 代码
        type: integer
      data:
        description: 数据
        items:
          $ref: '#/definitions/schema.ModelCache'
        type: array
      msg:
        description: 消息
        type: string
    type: object
  entity.CommonResponse-array_schema_Provider:
    properties:
      code:
        description: 代码
        type: integer
      data:
        description: 数据
        items:
          $ref: '#/definitions/schema.Provider'
        type: array
      msg:
        description: 消息
        type: string
    type: object
  entity.CommonResponse-bool:
    properties:
      code:
        description: 代码
        type: integer
      data:
        description: 数据
        type: boolean
      msg:
        description: 消息
        type: string
    type: object
  entity.CommonResponse-entity_PaginatedContinuationResponse-schema_Message:
    properties:
      code:
        description: 代码
        type: integer
      data:
        allOf:
          - $ref: '#/definitions/entity.PaginatedContinuationResponse-schema_Message'
        description: 数据
      msg:
        description: 消息
        type: string
    type: object
  entity.CommonResponse-entity_PaginatedContinuationResponse-schema_Problem:
    properties:
      code:
        description: 代码
        type: integer
      data:
        allOf:
          - $ref: '#/definitions/entity.PaginatedContinuationResponse-schema_Problem'
        description: 数据
      msg:
        description: 消息
        type: string
    type: object
  entity.CommonResponse-entity_PaginatedContinuationResponse-schema_UserSession:
    properties:
      code:
        description: 代码
        type: integer
      data:
        allOf:
          - $ref: '#/definitions/entity.PaginatedContinuationResponse-schema_UserSession'
        description: 数据
      msg:
        description: 消息
        type: string
    type: object
  entity.CommonResponse-entity_PaginatedSyncListResponse-schema_UserSession:
    properties:
      code:
        description: 代码
        type: integer
      data:
        allOf:
          - $ref: '#/definitions/entity.PaginatedSyncListResponse-schema_UserSession'
        description: 数据
      msg:
        description: 消息
        type: string
    type: object
  entity.CommonResponse-entity_PaginatedTotalResponse-schema_Course:
    properties:
      code:
        description: 代码
        type: integer
      data:
        allOf:
          - $ref: '#/definitions/entity.PaginatedTotalResponse-schema_Course'
        description: 数据
      msg:
        description: 消息
        type: string
    type: object
  entity.CommonResponse-schema_Course:
    properties:
      code:
        description: 代码
        type: integer
      data:
        allOf:
          - $ref: '#/definitions/schema.Course'
        description: 数据
      msg:
        description: 消息
        type: string
    type: object
  entity.CommonResponse-schema_Exam:
    properties:
      code:
        description: 代码
        type: integer
      data:
        allOf:
          - $ref: '#/definitions/schema.Exam'
        description: 数据
      msg:
        description: 消息
        type: string
    type: object
  entity.CommonResponse-schema_Problem:
    properties:
      code:
        description: 代码
        type: integer
      data:
        allOf:
          - $ref: '#/definitions/schema.Problem'
        description: 数据
      msg:
        description: 消息
        type: string
    type: object
  entity.CommonResponse-schema_Provider:
    properties:
      code:
        description: 代码
        type: integer
      data:
        allOf:
          - $ref: '#/definitions/schema.Provider'
        description: 数据
      msg:
        description: 消息
        type: string
    type: object
  entity.CommonResponse-schema_Session:
    properties:
      code:
        description: 代码
        type: integer
      data:
        allOf:
          - $ref: '#/definitions/schema.Session'
        description: 数据
      msg:
        description: 消息
        type: string
    type: object
  entity.CommonResponse-schema_User:
    properties:
      code:
        description: 代码
        type: integer
      data:
        allOf:
          - $ref: '#/definitions/schema.User'
        description: 数据
      msg:
        description: 消息
        type: string
    type: object
  entity.CommonResponse-schema_UserSession:
    properties:
      code:
        description: 代码
        type: integer
      data:
        allOf:
          - $ref: '#/definitions/schema.UserSession'
        description: 数据
      msg:
        description: 消息
        type: string
    type: object
  entity.CommonResponse-string:
    properties:
      code:
        description: 代码
        type: integer
      data:
        description: 数据
        type: string
      msg:
        description: 消息
        type: string
    type: object
  entity.PaginatedContinuationResponse-schema_Message:
    properties:
      list:
        items:
          $ref: '#/definitions/schema.Message'
        type: array
      next_page:
        type: integer
    type: object
  entity.PaginatedContinuationResponse-schema_Problem:
    properties:
      list:
        items:
          $ref: '#/definitions/schema.Problem'
        type: array
      next_page:
        type: integer
    type: object
  entity.PaginatedContinuationResponse-schema_UserSession:
    properties:
      list:
        items:
          $ref: '#/definitions/schema.UserSession'
        type: array
      next_page:
        type: integer
    type: object
  entity.PaginatedSyncListResponse-schema_UserSession:
    properties:
      deleted:
        items:
          $ref: '#/definitions/schema.UserSession'
        type: array
      next_page:
        type: integer
      updated:
        items:
          $ref: '#/definitions/schema.UserSession'
        type: array
    type: object
  entity.PaginatedTotalResponse-schema_Course:
    properties:
      last_page:
        type: integer
      list:
        items:
          $ref: '#/definitions/schema.Course'
        type: array
    type: object
  schema.APIKey:
    properties:
      created_at:
        type: string
      id:
        type: integer
      key:
        description: API 密钥
        type: string
      provider_id:
        description: 外键，指向 Provider
        type: integer
    type: object
  schema.BotRole:
    properties:
      created_at:
        type: string
      description:
        description: 角色描述
        type: string
      id:
        description: 原始数据
        type: integer
      name:
        description: 角色名称
        type: string
      prompt_session:
        allOf:
          - $ref: '#/definitions/schema.Session'
        description: 组装数据
      prompt_session_id:
        description: 引用一个 session 中的对话作为 prompt
        type: string
    type: object
  schema.Course:
    properties:
      created_at:
        type: string
      description:
        description: 课程描述
        type: string
      exams:
        description: 课程考试
        items:
          $ref: '#/definitions/schema.CourseExam'
        type: array
      id:
        description: 原始数据
        type: integer
      name:
        description: 课程名称
        type: string
      resources:
        description: 关联数据
        items:
          $ref: '#/definitions/schema.CourseResource'
        type: array
      sorted_data:
        description: 排好序的数据
        items: { }
        type: array
      updated_at:
        type: string
    type: object
  schema.CourseExam:
    properties:
      course_id:
        description: 关联课程ID
        type: integer
      exam:
        allOf:
          - $ref: '#/definitions/schema.Exam'
        description: 考试详细信息
      exam_id:
        description: 关联考试ID
        type: integer
      id:
        type: integer
      sort_order:
        description: 考试排序
        type: integer
    type: object
  schema.CourseResource:
    properties:
      course_id:
        description: 关联课程ID
        type: integer
      id:
        type: integer
      resource:
        allOf:
          - $ref: '#/definitions/schema.Resource'
        description: 资源详细信息
      resource_id:
        description: 关联资源ID
        type: integer
      sort_order:
        description: 资源排序
        type: integer
    type: object
  schema.Exam:
    properties:
      created_at:
        type: string
      description:
        description: 考试描述
        type: string
      id:
        type: integer
      name:
        type: string
      problems:
        description: 考试包含的大题
        items:
          $ref: '#/definitions/schema.ExamProblem'
        type: array
      subjects:
        description: 所属科目分类
        type: string
      total_score:
        description: 考试总分（单位：0.01分）
        type: integer
      updated_at:
        type: string
    type: object
  schema.ExamProblem:
    properties:
      exam_id:
        description: 关联考试ID
        type: integer
      problem:
        allOf:
          - $ref: '#/definitions/schema.Problem'
        description: 题目详细信息
      problem_id:
        description: 关联题目ID
        type: integer
      score:
        description: 题目分值（1表示0.01分）
        type: integer
      sort_order:
        description: 题目排序
        type: integer
    type: object
  schema.Message:
    properties:
      bot_role:
        $ref: '#/definitions/schema.BotRole'
      bot_role_id:
        description: 回复所使用的模型
        type: integer
      content:
        type: string
      created_at:
        type: string
      id:
        description: 默认结构
        type: integer
      model:
        allOf:
          - $ref: '#/definitions/schema.Model'
        description: 组装结构
      model_id:
        description: 回复所使用的模型
        type: integer
      reasoning_content:
        type: string
      role:
        description: user/assistant/system
        type: string
      session_id:
        type: string
      token_usage:
        type: integer
    type: object
  schema.Model:
    properties:
      config:
        allOf:
          - $ref: '#/definitions/schema.ModelConfig'
        description: 使用 JSON 储存配置
      created_at:
        type: string
      description:
        description: 额外模型描述
        type: string
      display_name:
        description: 对外展示模型名称
        type: string
      id:
        type: integer
      name:
        description: 模型名称
        type: string
      provider_id:
        description: 关联的 Provider ID
        type: integer
      updated_at:
        type: string
    type: object
  schema.ModelCache:
    properties:
      config:
        allOf:
          - $ref: '#/definitions/schema.ModelConfig'
        description: 使用 JSON 储存配置
      created_at:
        type: string
      description:
        description: 额外模型描述
        type: string
      display_name:
        description: 对外展示模型名称
        type: string
      id:
        type: integer
      name:
        description: 模型名称
        type: string
      provider_display_name:
        description: 关联的 Provider DisplayName
        type: string
      provider_id:
        description: 关联的 Provider ID
        type: integer
      provider_name:
        description: 关联的 Provider FileName
        type: string
      updated_at:
        type: string
    type: object
  schema.ModelConfig:
    properties:
      allow_system_prompt:
        description: 是否允许用户自行修改系统提示
        type: boolean
      default_temperature:
        description: 默认温度
        type: number
      frequency_penalty:
        type: number
      max_tokens:
        type: integer
      presence_penalty:
        type: number
      system_prompt:
        description: 预设系统提示
        type: string
      top_p:
        type: number
    type: object
  schema.Permission:
    properties:
      created_at:
        type: string
      description:
        description: 权限描述
        type: string
      id:
        type: integer
      module:
        description: 所属模块（handler名称）
        type: string
      name:
        description: 权限名称
        type: string
      path:
        description: 权限路径（形如：POST:/user/create）
        type: string
      updated_at:
        type: string
    type: object
  schema.Problem:
    properties:
      answer:
        allOf:
          - $ref: '#/definitions/schema.ProblemAnswer'
        description: 答案（JSON存储ProblemAnswer）
      created_at:
        type: string
      description:
        description: 支持HTML/Markdown
        type: string
      difficulty:
        description: 难度等级 1-5
        type: integer
      explanation:
        description: 答案解析
        type: string
      id:
        type: integer
      options:
        description: 选项（JSON存储ProblemOption数组）
        items:
          $ref: '#/definitions/schema.ProblemOption'
        type: array
      subject:
        description: 所属科目/分类
        type: string
      type:
        $ref: '#/definitions/schema.ProblemType'
      updated_at:
        type: string
    type: object
  schema.ProblemAnswer:
    properties:
      answer:
        description: |-
          选择题：存储正确选项ID []uint
          填空题：存储多个填空关键词 []string
          判断题：true/false
          简答题：文本答案 string
    type: object
  schema.ProblemOption:
    properties:
      content:
        type: string
      correct:
        description: 是否正确答案
        type: boolean
      id:
        type: integer
    type: object
  schema.ProblemType:
    enum:
      - single_choice
      - multiple_choice
      - fill_blank
      - short_answer
      - true_false
    type: string
    x-enum-varnames:
      - SingleChoice
      - MultipleChoice
      - FillBlank
      - ShortAnswer
      - TrueFalse
  schema.Provider:
    properties:
      api_keys:
        description: 一对多关系，与 APIKey 模型关联
        items:
          $ref: '#/definitions/schema.APIKey'
        type: array
      base_url:
        description: API 的基本 URL
        type: string
      created_at:
        type: string
      description:
        description: 额外提供商描述
        type: string
      display_name:
        description: 对外展示提供商名称
        type: string
      id:
        type: integer
      name:
        description: 提供商名称
        type: string
      schema:
        description: 一对多关系，与 Model 模型关联
        items:
          $ref: '#/definitions/schema.Model'
        type: array
      updated_at:
        type: string
    type: object
  schema.Resource:
    properties:
      created_at:
        type: string
      description:
        description: 资源描述
        type: string
      file_key:
        description: 文件的 uuid key
        type: string
      file_name:
        description: OSS 中的文件名
        type: string
      id:
        type: integer
      origin_file_name:
        description: 原始文件名
        type: string
      updated_at:
        type: string
    type: object
  schema.Role:
    properties:
      created_at:
        type: string
      description:
        description: 角色描述
        type: string
      id:
        type: integer
      name:
        description: 角色名称
        type: string
      permissions:
        description: 多对多关联
        items:
          $ref: '#/definitions/schema.Permission'
        type: array
      updated_at:
        type: string
    type: object
  schema.Session:
    properties:
      context_size:
        description: 上下文大小
        type: integer
      created_at:
        type: string
      enable_context:
        description: 上下文开关
        type: boolean
      id:
        description: 原始数据
        type: string
      last_active:
        type: string
      messages:
        description: 组装数据
        items:
          $ref: '#/definitions/schema.Message'
        type: array
      name:
        type: string
      system_prompt:
        description: 系统提示词
        type: string
      updated_at:
        type: string
    type: object
  schema.SessionFlagInfo:
    properties:
      star:
        description: 标星
        type: boolean
    type: object
  schema.SessionShareInfo:
    properties:
      code:
        description: 邀请码（可选）
        type: string
      expired_at:
        description: 邀请过期时间
        type: integer
      permanent:
        description: 是否永久分享
        type: boolean
      title:
        description: 分享标题
        type: string
    type: object
  schema.User:
    properties:
      created_at:
        type: string
      id:
        type: integer
      roles:
        description: 用户与角色之间的多对多关系
        items:
          $ref: '#/definitions/schema.Role'
        type: array
      updated_at:
        type: string
      username:
        type: string
    type: object
  schema.UserSession:
    properties:
      created_at:
        type: string
      flag_info:
        $ref: '#/definitions/schema.SessionFlagInfo'
      session:
        allOf:
          - $ref: '#/definitions/schema.Session'
        description: 组装数据
      session_id:
        type: string
      share_info:
        allOf:
          - $ref: '#/definitions/schema.SessionShareInfo'
        description: 分享字段
      type:
        $ref: '#/definitions/schema.UserSessionType'
      updated_at:
        type: string
      user_id:
        description: 原始数据
        type: integer
    type: object
  schema.UserSessionType:
    enum:
      - 1
      - 2
    type: integer
    x-enum-varnames:
      - OWNER
      - INVITEE
  user.Login.loginRequest:
    properties:
      password:
        type: string
      username:
        type: string
    required:
    - password
    - username
    type: object
  user.Register.registerRequest:
    properties:
      password:
        type: string
      username:
        type: string
    required:
    - password
    - username
    type: object
info:
  contact: {}
paths:
  /bot/{id}:
    get:
      consumes:
        - application/json
      description: 根据ID获取指定的机器人角色信息
      parameters:
        - description: 机器人角色ID
          in: path
          name: id
          required: true
          type: integer
      produces:
        - application/json
      responses:
        "200":
          description: 机器人角色信息
          schema:
            $ref: '#/definitions/schema.BotRole'
      summary: 获取机器人角色
      tags:
        - BotRole
  /bot/{id}/delete:
    post:
      consumes:
        - application/json
      description: 删除指定ID的机器人角色
      parameters:
        - description: 机器人角色ID
          in: path
          name: id
          required: true
          type: integer
      produces:
        - application/json
      responses:
        "200":
          description: 删除成功
          schema:
            type: boolean
      summary: 删除机器人角色
      tags:
        - BotRole
  /bot/{id}/update:
    post:
      consumes:
        - application/json
      description: 更新指定ID的机器人角色信息
      parameters:
        - description: 机器人角色ID
          in: path
          name: id
          required: true
          type: integer
        - description: 更新的机器人角色信息
          in: body
          name: role
          required: true
          schema:
            $ref: '#/definitions/schema.BotRole'
      produces:
        - application/json
      responses:
        "200":
          description: 更新后的机器人角色信息
          schema:
            $ref: '#/definitions/schema.BotRole'
      summary: 更新机器人角色
      tags:
        - BotRole
  /bot/create:
    post:
      consumes:
        - application/json
      description: 创建一个新的机器人角色，包含名称、描述和引用的会话ID
      parameters:
        - description: 机器人角色信息
          in: body
          name: role
          required: true
          schema:
            $ref: '#/definitions/schema.BotRole'
      produces:
        - application/json
      responses:
        "200":
          description: 成功创建的机器人角色
          schema:
            $ref: '#/definitions/schema.BotRole'
      summary: 创建机器人角色
      tags:
        - BotRole
  /bot/list:
    get:
      consumes:
        - application/json
      description: 获取所有机器人角色的列表
      produces:
        - application/json
      responses:
        "200":
          description: 机器人角色列表
          schema:
            items:
              $ref: '#/definitions/schema.BotRole'
            type: array
      summary: 获取机器人角色列表
      tags:
        - BotRole
  /chat/completion/stream/{session_id}:
    post:
      consumes:
      - application/json
      description: 流式输出聊天
      parameters:
      - description: 会话 ID
        in: path
        name: session_id
        required: true
        type: string
      - description: 用户输入及参数
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/chat.CompletionStream.userInput'
      produces:
      - text/event-stream
      responses: {}
      summary: 流式输出聊天
      tags:
      - Chat
  /chat/config/bots:
    get:
      consumes:
        - application/json
      description: 获取 bot 角色配置
      produces:
        - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/entity.CommonResponse-array_schema_BotRole'
      summary: 获取 bot 角色配置
      tags:
        - config
  /chat/config/models:
    get:
      consumes:
      - application/json
      description: 获取模型配置
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/entity.CommonResponse-array_schema_ModelCache'
      summary: 获取模型配置
      tags:
      - config
  /chat/message/list/{session_id}:
    get:
      consumes:
      - application/json
      description: 获取消息
      parameters:
      - description: 会话 ID
        in: path
        name: session_id
        required: true
        type: string
      - in: query
        name: end_time
        type: integer
      - description: 分页参数
        in: query
        name: page_num
        required: true
        type: integer
      - in: query
        name: page_size
        type: integer
      - in: query
        name: sort_expr
        type: string
      - in: query
        name: start_time
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: 返回数据
          schema:
            $ref: '#/definitions/entity.CommonResponse-entity_PaginatedContinuationResponse-schema_Message'
      summary: 获取消息
      tags:
      - Message
  /chat/session/{session_id}:
    get:
      consumes:
        - application/json
      description: 获取会话
      parameters:
        - description: 会话 ID
          in: path
          name: session_id
          required: true
          type: string
      produces:
        - application/json
      responses:
        "200":
          description: 返回数据
          schema:
            $ref: '#/definitions/entity.CommonResponse-schema_Session'
      summary: 获取会话
      tags:
        - Session
  /chat/session/del/{session_id}:
    post:
      consumes:
      - application/json
      description: 删除会话
      parameters:
      - description: 会话 ID
        in: path
        name: session_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/entity.CommonResponse-bool'
      summary: 删除会话
      tags:
        - Session
  /chat/session/flag/{session_id}:
    post:
      consumes:
        - application/json
      description: 更新用户会话标记
      parameters:
        - description: 会话 ID
          in: path
          name: session_id
          required: true
          type: string
        - description: 会话信息
          in: body
          name: req
          required: true
          schema:
            $ref: '#/definitions/schema.SessionFlagInfo'
      produces:
        - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/entity.CommonResponse-bool'
      summary: 更新用户会话标记
      tags:
      - Session
  /chat/session/list:
    get:
      consumes:
        - application/json
      description: 获取会话列表
      parameters:
        - in: query
          name: end_time
          type: integer
        - description: 分页参数
          in: query
          name: page_num
          required: true
          type: integer
        - in: query
          name: page_size
          type: integer
        - in: query
          name: sort_expr
          type: string
        - in: query
          name: start_time
          type: integer
      produces:
        - application/json
      responses:
        "200":
          description: 返回数据
          schema:
            $ref: '#/definitions/entity.CommonResponse-entity_PaginatedContinuationResponse-schema_UserSession'
      summary: 获取会话列表
      tags:
        - Session
  /chat/session/new:
    post:
      consumes:
      - application/json
      description: 创建会话
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/entity.CommonResponse-string'
      summary: 创建会话
      tags:
        - Session
  /chat/session/share/{session_id}:
    post:
      consumes:
        - application/json
      description: 分享会话
      parameters:
        - description: 会话 ID
          in: path
          name: session_id
          required: true
          type: string
        - description: 分享信息
          in: body
          name: req
          required: true
          schema:
            $ref: '#/definitions/chat.ShareSession.ShareRequest'
      produces:
        - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/entity.CommonResponse-bool'
      summary: 分享会话
      tags:
        - Session
  /chat/session/sync:
    get:
      consumes:
        - application/json
      description: 同步会话列表
      parameters:
        - description: 客户端上次同步时间戳
          in: query
          name: last_sync_time
          required: true
          type: integer
        - description: 分页参数
          in: query
          name: page_num
          required: true
          type: integer
        - in: query
          name: page_size
          type: integer
      produces:
        - application/json
      responses:
        "200":
          description: 返回数据
          schema:
            $ref: '#/definitions/entity.CommonResponse-entity_PaginatedSyncListResponse-schema_UserSession'
      summary: 同步会话列表
      tags:
        - Session
  /chat/session/update/{session_id}:
    post:
      consumes:
        - application/json
      description: 更新会话
      parameters:
        - description: 会话 ID
          in: path
          name: session_id
          required: true
          type: string
        - description: 会话信息
          in: body
          name: req
          required: true
          schema:
            $ref: '#/definitions/schema.Session'
      produces:
        - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/entity.CommonResponse-bool'
      summary: 更新会话
      tags:
      - Session
  /chat/session/user/{session_id}:
    get:
      consumes:
        - application/json
      description: 获取用户会话
      parameters:
        - description: 会话 ID
          in: path
          name: session_id
          required: true
          type: string
      produces:
        - application/json
      responses:
        "200":
          description: 返回数据
          schema:
            $ref: '#/definitions/entity.CommonResponse-schema_UserSession'
      summary: 获取用户会话
      tags:
        - Session
  /manage/provider/{provider_id}:
    get:
      consumes:
      - application/json
      description: 获取 API 提供商
      parameters:
      - description: API 提供商 ID
        in: path
        name: provider_id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: API 提供商
          schema:
            $ref: '#/definitions/entity.CommonResponse-schema_Provider'
      summary: 获取 API 提供商
      tags:
      - Provider
  /manage/provider/create:
    post:
      consumes:
      - application/json
      description: 创建 API 提供商
      parameters:
      - description: API 提供商参数
        in: body
        name: provider
        required: true
        schema:
          $ref: '#/definitions/schema.Provider'
      produces:
      - application/json
      responses:
        "200":
          description: 成功创建的 API 提供商
          schema:
            $ref: '#/definitions/entity.CommonResponse-schema_Provider'
      summary: 创建 API 提供商
      tags:
      - Provider
  /manage/provider/delete/{provider_id}:
    post:
      consumes:
      - application/json
      description: 删除 API 提供商
      parameters:
      - description: API 提供商 ID
        in: path
        name: provider_id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: 删除成功与否
          schema:
            $ref: '#/definitions/entity.CommonResponse-bool'
      summary: 删除 API 提供商
      tags:
      - Provider
  /manage/provider/list:
    get:
      consumes:
      - application/json
      description: 批量获取 API 提供商
      produces:
      - application/json
      responses:
        "200":
          description: API 提供商列表
          schema:
            $ref: '#/definitions/entity.CommonResponse-array_schema_Provider'
      summary: 批量获取 API 提供商
      tags:
      - Provider
  /manage/provider/update:
    post:
      consumes:
      - application/json
      description: 更新 API 提供商
      parameters:
      - description: API 提供商参数
        in: body
        name: provider
        required: true
        schema:
          $ref: '#/definitions/schema.Provider'
      produces:
      - application/json
      responses:
        "200":
          description: 更新成功与否
          schema:
            $ref: '#/definitions/entity.CommonResponse-bool'
      summary: 更新 API 提供商
      tags:
      - Provider
  /tue/course/{id}:
    get:
      consumes:
        - application/json
      description: 获取单个课程
      parameters:
        - description: 课程 ID
          in: path
          name: id
          required: true
          type: string
      produces:
        - application/json
      responses:
        "200":
          description: 返回数据
          schema:
            $ref: '#/definitions/entity.CommonResponse-schema_Course'
      summary: 获取单个课程
      tags:
        - Course
    post:
      consumes:
        - application/json
      description: 删除课程
      parameters:
        - description: 课程 ID
          in: path
          name: id
          required: true
          type: string
      produces:
        - application/json
      responses:
        "200":
          description: 返回数据
          schema:
            $ref: '#/definitions/entity.CommonResponse-any'
      summary: 删除课程
      tags:
        - Course
  /tue/course/create:
    post:
      consumes:
        - application/json
      description: 创建课程基础参数，绑定或创建题目、资源
      parameters:
        - description: 课程内容
          in: body
          name: req
          required: true
          schema:
            $ref: '#/definitions/schema.Course'
      produces:
        - application/json
      responses:
        "200":
          description: 返回数据
          schema:
            $ref: '#/definitions/entity.CommonResponse-schema_Course'
      summary: 创建课程
      tags:
        - Course
  /tue/course/list:
    get:
      consumes:
        - application/json
      description: 获取课程列表
      parameters:
        - in: query
          name: end_time
          type: integer
        - description: 分页参数
          in: query
          name: page_num
          required: true
          type: integer
        - in: query
          name: page_size
          type: integer
        - in: query
          name: sort_expr
          type: string
        - in: query
          name: start_time
          type: integer
      produces:
        - application/json
      responses:
        "200":
          description: 返回数据
          schema:
            $ref: '#/definitions/entity.CommonResponse-entity_PaginatedTotalResponse-schema_Course'
      summary: 获取课程列表
      tags:
        - Course
  /tue/course/update:
    post:
      consumes:
        - application/json
      description: 更新课程基础参数，增量更新 题目、资源
      parameters:
        - description: 课程内容
          in: body
          name: req
          required: true
          schema:
            $ref: '#/definitions/schema.Course'
      produces:
        - application/json
      responses:
        "200":
          description: 返回数据
          schema:
            $ref: '#/definitions/entity.CommonResponse-schema_Course'
      summary: 更新课程
      tags:
        - Course
  /tue/exam/{id}:
    get:
      consumes:
        - application/json
      description: 获取单个测验
      parameters:
        - description: 测验 ID
          in: path
          name: id
          required: true
          type: string
      produces:
        - application/json
      responses:
        "200":
          description: 返回数据
          schema:
            $ref: '#/definitions/entity.CommonResponse-schema_Exam'
      summary: 获取单个测验
      tags:
        - Exam
  /tue/exam/create:
    get:
      consumes:
        - application/json
      description: 保存单个测验
      parameters:
        - description: 测验内容
          in: body
          name: req
          required: true
          schema:
            $ref: '#/definitions/schema.Exam'
      produces:
        - application/json
      responses:
        "200":
          description: 返回数据
          schema:
            $ref: '#/definitions/entity.CommonResponse-schema_Exam'
      summary: 保存单个测验
      tags:
        - Exam
  /tue/problem/{id}:
    get:
      consumes:
        - application/json
      description: 获取单个题目
      parameters:
        - description: 题目 ID
          in: path
          name: id
          required: true
          type: string
      produces:
        - application/json
      responses:
        "200":
          description: 返回数据
          schema:
            $ref: '#/definitions/entity.CommonResponse-schema_Problem'
      summary: 获取单个题目
      tags:
        - Problem
  /tue/problem/create:
    post:
      consumes:
        - application/json
      description: 创建单个题目
      parameters:
        - description: 题目结构
          in: body
          name: req
          required: true
          schema:
            $ref: '#/definitions/schema.Problem'
      produces:
        - application/json
      responses:
        "200":
          description: 返回数据
          schema:
            $ref: '#/definitions/entity.CommonResponse-schema_Problem'
      summary: 创建单个题目
      tags:
        - Problem
  /tue/problem/list:
    get:
      consumes:
        - application/json
      description: 分页获取题目列表
      parameters:
        - in: query
          name: end_time
          type: integer
        - description: 分页参数
          in: query
          name: page_num
          required: true
          type: integer
        - in: query
          name: page_size
          type: integer
        - in: query
          name: sort_expr
          type: string
        - in: query
          name: start_time
          type: integer
      produces:
        - application/json
      responses:
        "200":
          description: 返回数据
          schema:
            $ref: '#/definitions/entity.CommonResponse-entity_PaginatedContinuationResponse-schema_Problem'
      summary: 分页获取题目列表
      tags:
        - Problem
  /user/login:
    post:
      consumes:
      - application/json
      description: 用户登录
      parameters:
      - description: 登录请求
        in: body
        name: req
        required: true
        schema:
          $ref: '#/definitions/user.Login.loginRequest'
      produces:
      - application/json
      responses:
        "200":
          description: login successfully
          schema:
            $ref: '#/definitions/entity.CommonResponse-schema_User'
      summary: 用户登录
      tags:
        - User
  /user/logout:
    post:
      consumes:
        - application/json
      description: 用户登出
      produces:
        - application/json
      responses: { }
      summary: 用户登出
      tags:
      - User
  /user/ping:
    post:
      consumes:
      - application/json
      description: 检测客户端登录态
      produces:
      - application/json
      responses:
        "200":
          description: user is online
          schema:
            $ref: '#/definitions/entity.CommonResponse-schema_User'
        "404":
          description: user not found
          schema:
            $ref: '#/definitions/entity.CommonResponse-any'
      summary: 检测客户端登录态
      tags:
      - User
  /user/refresh:
    get:
      description: 刷新登录态
      parameters:
      - description: 刷新用 Token
        in: header
        name: X-Refresh-Token
        required: true
        type: string
      responses:
        "200":
          description: nothing
          schema:
            type: string
      summary: 刷新登录态
      tags:
      - User
  /user/register:
    post:
      consumes:
      - application/json
      description: 用户注册
      parameters:
      - description: 注册请求
        in: body
        name: req
        required: true
        schema:
          $ref: '#/definitions/user.Register.registerRequest'
      produces:
      - application/json
      responses:
        "200":
          description: register successfully
          schema:
            $ref: '#/definitions/entity.CommonResponse-bool'
      summary: 用户注册
      tags:
      - User
swagger: "2.0"
