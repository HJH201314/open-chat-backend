definitions:
  chat.CompletionStream.userInput:
    properties:
      enable_context:
        type: boolean
      model_name:
        description: Model.Name 准确的模型名称
        type: string
      provider_name:
        description: Provider.Name 准确的供应商名称
        type: string
      question:
        type: string
      system_prompt:
        description: 系统提示词
        type: string
    required:
    - model_name
    - provider_name
    - question
    type: object
  entity.CommonResponse-any:
    properties:
      code:
        description: 代码
        type: integer
      data:
        description: 数据
      msg:
        description: 消息
        type: string
    type: object
  entity.CommonResponse-array_schema_ModelCache:
    properties:
      code:
        description: 代码
        type: integer
      data:
        description: 数据
        items:
          $ref: '#/definitions/schema.ModelCache'
        type: array
      msg:
        description: 消息
        type: string
    type: object
  entity.CommonResponse-array_schema_Provider:
    properties:
      code:
        description: 代码
        type: integer
      data:
        description: 数据
        items:
          $ref: '#/definitions/schema.Provider'
        type: array
      msg:
        description: 消息
        type: string
    type: object
  entity.CommonResponse-bool:
    properties:
      code:
        description: 代码
        type: integer
      data:
        description: 数据
        type: boolean
      msg:
        description: 消息
        type: string
    type: object
  entity.CommonResponse-entity_PagingResponse-schema_Message:
    properties:
      code:
        description: 代码
        type: integer
      data:
        allOf:
          - $ref: '#/definitions/entity.PagingResponse-schema_Message'
        description: 数据
      msg:
        description: 消息
        type: string
    type: object
  entity.CommonResponse-entity_PagingResponse-schema_Session:
    properties:
      code:
        description: 代码
        type: integer
      data:
        allOf:
          - $ref: '#/definitions/entity.PagingResponse-schema_Session'
        description: 数据
      msg:
        description: 消息
        type: string
    type: object
  entity.CommonResponse-schema_Provider:
    properties:
      code:
        description: 代码
        type: integer
      data:
        allOf:
          - $ref: '#/definitions/schema.Provider'
        description: 数据
      msg:
        description: 消息
        type: string
    type: object
  entity.CommonResponse-schema_User:
    properties:
      code:
        description: 代码
        type: integer
      data:
        allOf:
          - $ref: '#/definitions/schema.User'
        description: 数据
      msg:
        description: 消息
        type: string
    type: object
  entity.CommonResponse-string:
    properties:
      code:
        description: 代码
        type: integer
      data:
        description: 数据
        type: string
      msg:
        description: 消息
        type: string
    type: object
  entity.PagingResponse-schema_Message:
    properties:
      list:
        items:
          $ref: '#/definitions/schema.Message'
        type: array
      next_page:
        type: integer
    type: object
  entity.PagingResponse-schema_Session:
    properties:
      list:
        items:
          $ref: '#/definitions/schema.Session'
        type: array
      next_page:
        type: integer
    type: object
  schema.APIKey:
    properties:
      created_at:
        type: string
      id:
        type: integer
      key:
        description: API 密钥
        type: string
      provider_id:
        description: 外键，指向 Provider
        type: integer
    type: object
  schema.Message:
    properties:
      content:
        type: string
      created_at:
        type: string
      id:
        type: integer
      model_id:
        description: 回复所使用的模型
        type: integer
      reasoning_content:
        type: string
      role:
        description: user/assistant/system
        type: string
      session_id:
        type: string
    type: object
  schema.Model:
    properties:
      config:
        allOf:
          - $ref: '#/definitions/schema.ModelConfig'
        description: 使用 JSON 储存配置
      created_at:
        type: string
      description:
        description: 额外模型描述
        type: string
      display_name:
        description: 对外展示模型名称
        type: string
      id:
        type: integer
      name:
        description: 模型名称
        type: string
      provider_id:
        description: 关联的 Provider ID
        type: integer
      updated_at:
        type: string
    type: object
  schema.ModelCache:
    properties:
      config:
        allOf:
          - $ref: '#/definitions/schema.ModelConfig'
        description: 使用 JSON 储存配置
      created_at:
        type: string
      description:
        description: 额外模型描述
        type: string
      display_name:
        description: 对外展示模型名称
        type: string
      id:
        type: integer
      name:
        description: 模型名称
        type: string
      provider_display_name:
        description: 关联的 Provider DisplayName
        type: string
      provider_id:
        description: 关联的 Provider ID
        type: integer
      provider_name:
        description: 关联的 Provider Name
        type: string
      updated_at:
        type: string
    type: object
  schema.ModelConfig:
    properties:
      allow_system_prompt:
        description: 是否允许用户自行修改系统提示
        type: boolean
      default_temperature:
        description: 默认温度
        type: number
      frequency_penalty:
        type: number
      max_tokens:
        type: integer
      presence_penalty:
        type: number
      system_prompt:
        description: 预设系统提示
        type: string
      top_p:
        type: number
    type: object
  schema.ModelParams:
    properties:
      max_tokens:
        type: integer
      schema:
        type: string
      temperature:
        type: number
    type: object
  schema.Permission:
    properties:
      created_at:
        type: string
      description:
        description: 权限描述
        type: string
      id:
        type: integer
      name:
        description: 权限名称
        type: string
      path:
        description: 权限路径（一般与名称相同）
        type: string
      updated_at:
        type: string
    type: object
  schema.Provider:
    properties:
      api_keys:
        description: 一对多关系，与 APIKey 模型关联
        items:
          $ref: '#/definitions/schema.APIKey'
        type: array
      base_url:
        description: API 的基本 URL
        type: string
      created_at:
        type: string
      description:
        description: 额外提供商描述
        type: string
      display_name:
        description: 对外展示提供商名称
        type: string
      id:
        type: integer
      name:
        description: 提供商名称
        type: string
      schema:
        description: 一对多关系，与 Model 模型关联
        items:
          $ref: '#/definitions/schema.Model'
        type: array
      updated_at:
        type: string
    type: object
  schema.Role:
    properties:
      created_at:
        type: string
      description:
        description: 角色描述
        type: string
      id:
        type: integer
      name:
        description: 角色名称
        type: string
      permissions:
        description: 多对多关联
        items:
          $ref: '#/definitions/schema.Permission'
        type: array
      updated_at:
        type: string
    type: object
  schema.Session:
    properties:
      created_at:
        type: string
      enable_context:
        description: 上下文开关
        type: boolean
      id:
        type: string
      last_active:
        type: string
      model_params:
        allOf:
          - $ref: '#/definitions/schema.ModelParams'
        description: 模型参数
      user_id:
        type: integer
    type: object
  schema.User:
    properties:
      created_at:
        type: string
      id:
        type: integer
      roles:
        description: 用户与角色之间的多对多关系
        items:
          $ref: '#/definitions/schema.Role'
        type: array
      updated_at:
        type: string
      username:
        type: string
    type: object
  user.Login.loginRequest:
    properties:
      password:
        type: string
      username:
        type: string
    required:
    - password
    - username
    type: object
  user.Register.registerRequest:
    properties:
      password:
        type: string
      username:
        type: string
    required:
    - password
    - username
    type: object
info:
  contact: {}
paths:
  /chat/completion/stream/{session_id}:
    post:
      consumes:
      - application/json
      description: 流式输出聊天
      parameters:
      - description: 会话 ID
        in: path
        name: session_id
        required: true
        type: string
      - description: 用户输入及参数
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/chat.CompletionStream.userInput'
      produces:
      - text/event-stream
      responses: {}
      summary: 流式输出聊天
      tags:
      - Chat
  /chat/config/schema:
    get:
      consumes:
      - application/json
      description: 获取所有模型
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/entity.CommonResponse-array_schema_ModelCache'
      summary: 获取所有模型
      tags:
      - config
  /chat/message/list/{session_id}:
    get:
      consumes:
      - application/json
      description: 获取消息
      parameters:
      - description: 会话 ID
        in: path
        name: session_id
        required: true
        type: string
      - in: query
        name: page_num
        required: true
        type: integer
      - in: query
        name: page_size
        type: integer
      - in: query
        name: sort_expr
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: 返回数据
          schema:
            $ref: '#/definitions/entity.CommonResponse-entity_PagingResponse-schema_Message'
      summary: 获取消息
      tags:
      - Message
  /chat/session/del/{session_id}:
    post:
      consumes:
      - application/json
      description: 删除会话
      parameters:
      - description: 会话 ID
        in: path
        name: session_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/entity.CommonResponse-bool'
      summary: 删除会话
      tags:
      - Session
  /chat/session/list:
    get:
      consumes:
        - application/json
      description: 获取会话列表
      parameters:
        - in: query
          name: page_num
          required: true
          type: integer
        - in: query
          name: page_size
          type: integer
        - in: query
          name: sort_expr
          type: string
      produces:
        - application/json
      responses:
        "200":
          description: 返回数据
          schema:
            $ref: '#/definitions/entity.CommonResponse-entity_PagingResponse-schema_Session'
      summary: 获取会话列表
      tags:
        - Session
  /chat/session/new:
    post:
      consumes:
      - application/json
      description: 创建会话
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/entity.CommonResponse-string'
      summary: 创建会话
      tags:
      - Session
  /manage/provider/{provider_id}:
    get:
      consumes:
      - application/json
      description: 获取 API 提供商
      parameters:
      - description: API 提供商 ID
        in: path
        name: provider_id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: API 提供商
          schema:
            $ref: '#/definitions/entity.CommonResponse-schema_Provider'
      summary: 获取 API 提供商
      tags:
      - Provider
  /manage/provider/create:
    post:
      consumes:
      - application/json
      description: 创建 API 提供商
      parameters:
      - description: API 提供商参数
        in: body
        name: provider
        required: true
        schema:
          $ref: '#/definitions/schema.Provider'
      produces:
      - application/json
      responses:
        "200":
          description: 成功创建的 API 提供商
          schema:
            $ref: '#/definitions/entity.CommonResponse-schema_Provider'
      summary: 创建 API 提供商
      tags:
      - Provider
  /manage/provider/delete/{provider_id}:
    post:
      consumes:
      - application/json
      description: 删除 API 提供商
      parameters:
      - description: API 提供商 ID
        in: path
        name: provider_id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: 删除成功与否
          schema:
            $ref: '#/definitions/entity.CommonResponse-bool'
      summary: 删除 API 提供商
      tags:
      - Provider
  /manage/provider/list:
    get:
      consumes:
      - application/json
      description: 批量获取 API 提供商
      produces:
      - application/json
      responses:
        "200":
          description: API 提供商列表
          schema:
            $ref: '#/definitions/entity.CommonResponse-array_schema_Provider'
      summary: 批量获取 API 提供商
      tags:
      - Provider
  /manage/provider/update:
    post:
      consumes:
      - application/json
      description: 更新 API 提供商
      parameters:
      - description: API 提供商参数
        in: body
        name: provider
        required: true
        schema:
          $ref: '#/definitions/schema.Provider'
      produces:
      - application/json
      responses:
        "200":
          description: 更新成功与否
          schema:
            $ref: '#/definitions/entity.CommonResponse-bool'
      summary: 更新 API 提供商
      tags:
      - Provider
  /user/login:
    post:
      consumes:
      - application/json
      description: 用户登录
      parameters:
      - description: 登录请求
        in: body
        name: req
        required: true
        schema:
          $ref: '#/definitions/user.Login.loginRequest'
      produces:
      - application/json
      responses:
        "200":
          description: login successfully
          schema:
            $ref: '#/definitions/entity.CommonResponse-schema_User'
      summary: 用户登录
      tags:
      - User
  /user/ping:
    post:
      consumes:
      - application/json
      description: 检测客户端登录态
      produces:
      - application/json
      responses:
        "200":
          description: user is online
          schema:
            $ref: '#/definitions/entity.CommonResponse-schema_User'
        "404":
          description: user not found
          schema:
            $ref: '#/definitions/entity.CommonResponse-any'
      summary: 检测客户端登录态
      tags:
      - User
  /user/refresh:
    get:
      description: 刷新登录态
      parameters:
      - description: 刷新用 Token
        in: header
        name: X-Refresh-Token
        required: true
        type: string
      responses:
        "200":
          description: nothing
          schema:
            type: string
      summary: 刷新登录态
      tags:
      - User
  /user/register:
    post:
      consumes:
      - application/json
      description: 用户注册
      parameters:
      - description: 注册请求
        in: body
        name: req
        required: true
        schema:
          $ref: '#/definitions/user.Register.registerRequest'
      produces:
      - application/json
      responses:
        "200":
          description: register successfully
          schema:
            $ref: '#/definitions/entity.CommonResponse-bool'
      summary: 用户注册
      tags:
      - User
swagger: "2.0"
