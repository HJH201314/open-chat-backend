definitions:
  chat.CompletionStream.userInput:
    properties:
      enable_context:
        type: boolean
      model_name:
        description: 准确的模型名称
        type: string
      provider:
        description: DeepSeek or OpenAI
        type: string
      question:
        type: string
      system_prompt:
        description: 系统提示词
        type: string
    required:
      - question
    type: object
  entity.CommonResponse-any:
    properties:
      code:
        description: 代码
        type: integer
      data:
        description: 数据
      msg:
        description: 消息
        type: string
    type: object
  entity.CommonResponse-array_models_Provider:
    properties:
      code:
        description: 代码
        type: integer
      data:
        description: 数据
        items:
          $ref: '#/definitions/models.Provider'
        type: array
      msg:
        description: 消息
        type: string
    type: object
  entity.CommonResponse-bool:
    properties:
      code:
        description: 代码
        type: integer
      data:
        description: 数据
        type: boolean
      msg:
        description: 消息
        type: string
    type: object
  entity.CommonResponse-models_Provider:
    properties:
      code:
        description: 代码
        type: integer
      data:
        allOf:
          - $ref: '#/definitions/models.Provider'
        description: 数据
      msg:
        description: 消息
        type: string
    type: object
  entity.CommonResponse-models_User:
    properties:
      code:
        description: 代码
        type: integer
      data:
        allOf:
          - $ref: '#/definitions/models.User'
        description: 数据
      msg:
        description: 消息
        type: string
    type: object
  entity.CommonResponse-string:
    properties:
      code:
        description: 代码
        type: integer
      data:
        description: 数据
        type: string
      msg:
        description: 消息
        type: string
    type: object
  models.APIKey:
    properties:
      created_at:
        type: string
      id:
        type: integer
      key:
        description: API 密钥
        type: string
      provider_id:
        description: 外键，指向 Provider
        type: integer
    type: object
  models.Model:
    properties:
      config:
        allOf:
          - $ref: '#/definitions/models.ModelConfig'
        description: 使用 JSON 储存配置
      created_at:
        type: string
      description:
        description: 额外模型描述
        type: string
      display_name:
        description: 对外展示模型名称
        type: string
      id:
        type: integer
      name:
        description: 模型名称
        type: string
      provider_id:
        description: 关联的 Provider ID
        type: integer
      updated_at:
        type: string
    type: object
  models.ModelConfig:
    properties:
      default_temperature:
        type: number
      frequency_penalty:
        type: number
      max_tokens:
        type: integer
      presence_penalty:
        type: number
      system_prompt:
        type: string
      top_p:
        type: number
    type: object
  models.Permission:
    properties:
      created_at:
        type: string
      description:
        description: 权限描述
        type: string
      id:
        type: integer
      name:
        description: 权限名称
        type: string
      path:
        description: 权限路径（一般与名称相同）
        type: string
      updated_at:
        type: string
    type: object
  models.Provider:
    properties:
      api_keys:
        description: 一对多关系，与 APIKey 模型关联
        items:
          $ref: '#/definitions/models.APIKey'
        type: array
      base_url:
        description: API 的基本 URL
        type: string
      created_at:
        type: string
      description:
        description: 额外提供商描述
        type: string
      display_name:
        description: 对外展示提供商名称
        type: string
      id:
        type: integer
      models:
        description: 一对多关系，与 Model 模型关联
        items:
          $ref: '#/definitions/models.Model'
        type: array
      name:
        description: 提供商名称
        type: string
      updated_at:
        type: string
    type: object
  models.Role:
    properties:
      created_at:
        type: string
      description:
        description: 角色描述
        type: string
      id:
        type: integer
      name:
        description: 角色名称
        type: string
      permissions:
        description: 多对多关联
        items:
          $ref: '#/definitions/models.Permission'
        type: array
      updated_at:
        type: string
    type: object
  models.User:
    properties:
      created_at:
        type: string
      id:
        type: integer
      roles:
        description: 用户与角色之间的多对多关系
        items:
          $ref: '#/definitions/models.Role'
        type: array
      updated_at:
        type: string
      username:
        type: string
    type: object
  user.Login.loginRequest:
    properties:
      password:
        type: string
      username:
        type: string
    required:
      - password
      - username
    type: object
  user.Register.registerRequest:
    properties:
      password:
        type: string
      username:
        type: string
    required:
      - password
      - username
    type: object
info:
  contact: { }
paths:
  /chat/completion/stream/{session_id}:
    post:
      consumes:
        - application/json
      description: 流式输出聊天
      parameters:
        - description: 会话 ID
          in: path
          name: session_id
          required: true
          type: string
        - description: 用户输入及参数
          in: body
          name: request
          required: true
          schema:
            $ref: '#/definitions/chat.CompletionStream.userInput'
      produces:
        - text/event-stream
      responses: { }
      summary: 流式输出聊天
      tags:
        - Chat
  /chat/session/del/{session_id}:
    post:
      consumes:
        - application/json
      description: 删除会话
      parameters:
        - description: 会话 ID
          in: path
          name: session_id
          required: true
          type: string
      produces:
        - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/entity.CommonResponse-bool'
      summary: 删除会话
      tags:
        - Session
  /chat/session/new:
    post:
      consumes:
        - application/json
      description: 创建会话
      produces:
        - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/entity.CommonResponse-string'
      summary: 创建会话
      tags:
        - Session
  /manage/provider/{provider_id}:
    get:
      consumes:
        - application/json
      description: 获取 API 提供商
      parameters:
        - description: API 提供商 ID
          in: path
          name: provider_id
          required: true
          type: integer
      produces:
        - application/json
      responses:
        "200":
          description: API 提供商
          schema:
            $ref: '#/definitions/entity.CommonResponse-models_Provider'
      summary: 获取 API 提供商
      tags:
        - Provider
  /manage/provider/create:
    post:
      consumes:
        - application/json
      description: 创建 API 提供商
      parameters:
        - description: API 提供商参数
          in: body
          name: provider
          required: true
          schema:
            $ref: '#/definitions/models.Provider'
      produces:
        - application/json
      responses:
        "200":
          description: 成功创建的 API 提供商
          schema:
            $ref: '#/definitions/entity.CommonResponse-models_Provider'
      summary: 创建 API 提供商
      tags:
        - Provider
  /manage/provider/delete/{provider_id}:
    post:
      consumes:
        - application/json
      description: 删除 API 提供商
      parameters:
        - description: API 提供商 ID
          in: path
          name: provider_id
          required: true
          type: integer
      produces:
        - application/json
      responses:
        "200":
          description: 删除成功与否
          schema:
            $ref: '#/definitions/entity.CommonResponse-bool'
      summary: 删除 API 提供商
      tags:
        - Provider
  /manage/provider/list:
    get:
      consumes:
        - application/json
      description: 批量获取 API 提供商
      produces:
        - application/json
      responses:
        "200":
          description: API 提供商列表
          schema:
            $ref: '#/definitions/entity.CommonResponse-array_models_Provider'
      summary: 批量获取 API 提供商
      tags:
        - Provider
  /manage/provider/update:
    post:
      consumes:
        - application/json
      description: 更新 API 提供商
      parameters:
        - description: API 提供商参数
          in: body
          name: provider
          required: true
          schema:
            $ref: '#/definitions/models.Provider'
      produces:
        - application/json
      responses:
        "200":
          description: 更新成功与否
          schema:
            $ref: '#/definitions/entity.CommonResponse-bool'
      summary: 更新 API 提供商
      tags:
        - Provider
  /user/login:
    post:
      consumes:
        - application/json
      description: 用户登录
      parameters:
        - description: 登录请求
          in: body
          name: req
          required: true
          schema:
            $ref: '#/definitions/user.Login.loginRequest'
      produces:
        - application/json
      responses:
        "200":
          description: login successfully
          schema:
            $ref: '#/definitions/entity.CommonResponse-models_User'
      summary: 用户登录
      tags:
        - User
  /user/ping:
    post:
      consumes:
        - application/json
      description: 检测客户端登录态
      produces:
        - application/json
      responses:
        "200":
          description: user is online
          schema:
            $ref: '#/definitions/entity.CommonResponse-models_User'
        "404":
          description: user not found
          schema:
            $ref: '#/definitions/entity.CommonResponse-any'
      summary: 检测客户端登录态
      tags:
        - User
  /user/register:
    post:
      consumes:
        - application/json
      description: 用户注册
      parameters:
        - description: 注册请求
          in: body
          name: req
          required: true
          schema:
            $ref: '#/definitions/user.Register.registerRequest'
      produces:
        - application/json
      responses:
        "200":
          description: register successfully
          schema:
            $ref: '#/definitions/entity.CommonResponse-bool'
      summary: 用户注册
      tags:
        - User
swagger: "2.0"
