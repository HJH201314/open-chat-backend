// Package docs Code generated by swaggo/swag. DO NOT EDIT
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {},
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/chat/completion/stream/{session_id}": {
            "post": {
                "description": "流式输出聊天",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "text/event-stream"
                ],
                "tags": [
                    "Chat"
                ],
                "summary": "流式输出聊天",
                "parameters": [
                    {
                        "type": "string",
                        "description": "会话 ID",
                        "name": "session_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "用户输入及参数",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/chat.CompletionStream.userInput"
                        }
                    }
                ],
                "responses": {}
            }
        },
        "/chat/session/del/{session_id}": {
            "post": {
                "description": "删除会话",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Session"
                ],
                "summary": "删除会话",
                "parameters": [
                    {
                        "type": "string",
                        "description": "会话 ID",
                        "name": "session_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/entity.CommonResponse-bool"
                        }
                    }
                }
            }
        },
        "/chat/session/new": {
            "post": {
                "description": "创建会话",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Session"
                ],
                "summary": "创建会话",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/entity.CommonResponse-string"
                        }
                    }
                }
            }
        },
        "/user/ping": {
            "post": {
                "description": "检测客户端登录态",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "User"
                ],
                "summary": "检测客户端登录态",
                "responses": {
                    "200": {
                        "description": "user is online",
                        "schema": {
                            "$ref": "#/definitions/entity.CommonResponse-models_User"
                        }
                    },
                    "404": {
                        "description": "user not found",
                        "schema": {
                            "$ref": "#/definitions/entity.CommonResponse-any"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "chat.CompletionStream.userInput": {
            "type": "object",
            "required": [
                "question"
            ],
            "properties": {
                "enable_context": {
                    "type": "boolean"
                },
                "model_name": {
                    "description": "准确的模型名称",
                    "type": "string"
                },
                "provider": {
                    "description": "DeepSeek or OpenAI",
                    "type": "string"
                },
                "question": {
                    "type": "string"
                },
                "system_prompt": {
                    "description": "系统提示词",
                    "type": "string"
                }
            }
        },
        "entity.CommonResponse-any": {
            "type": "object",
            "properties": {
                "code": {
                    "description": "代码",
                    "type": "integer"
                },
                "data": {
                    "description": "数据"
                },
                "msg": {
                    "description": "消息",
                    "type": "string"
                }
            }
        },
        "entity.CommonResponse-bool": {
            "type": "object",
            "properties": {
                "code": {
                    "description": "代码",
                    "type": "integer"
                },
                "data": {
                    "description": "数据",
                    "type": "boolean"
                },
                "msg": {
                    "description": "消息",
                    "type": "string"
                }
            }
        },
        "entity.CommonResponse-models_User": {
            "type": "object",
            "properties": {
                "code": {
                    "description": "代码",
                    "type": "integer"
                },
                "data": {
                    "description": "数据",
                    "allOf": [
                        {
                            "$ref": "#/definitions/models.User"
                        }
                    ]
                },
                "msg": {
                    "description": "消息",
                    "type": "string"
                }
            }
        },
        "entity.CommonResponse-string": {
            "type": "object",
            "properties": {
                "code": {
                    "description": "代码",
                    "type": "integer"
                },
                "data": {
                    "description": "数据",
                    "type": "string"
                },
                "msg": {
                    "description": "消息",
                    "type": "string"
                }
            }
        },
        "models.Permission": {
            "type": "object",
            "properties": {
                "created_at": {
                    "type": "string"
                },
                "description": {
                    "description": "权限描述",
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "name": {
                    "description": "权限名称",
                    "type": "string"
                },
                "path": {
                    "description": "权限路径（一般与名称相同）",
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                }
            }
        },
        "models.Role": {
            "type": "object",
            "properties": {
                "created_at": {
                    "type": "string"
                },
                "description": {
                    "description": "角色描述",
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "name": {
                    "description": "角色名称",
                    "type": "string"
                },
                "permissions": {
                    "description": "多对多关联",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.Permission"
                    }
                },
                "updated_at": {
                    "type": "string"
                }
            }
        },
        "models.User": {
            "type": "object",
            "properties": {
                "created_at": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "roles": {
                    "description": "用户与角色之间的多对多关系",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.Role"
                    }
                },
                "updated_at": {
                    "type": "string"
                },
                "username": {
                    "type": "string"
                }
            }
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "",
	Host:             "",
	BasePath:         "",
	Schemes:          []string{},
	Title:            "",
	Description:      "",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
